(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{967:function(e,t,v){"use strict";v.r(t);var _=v(10),a=Object(_.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"一、浏览器缓存基本认识"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#一、浏览器缓存基本认识"}},[e._v("#")]),e._v(" 一、浏览器缓存基本认识")]),e._v(" "),v("p",[v("strong",[e._v("分为强缓存和协商缓存")])]),e._v(" "),v("ol",[v("li",[e._v("浏览器在加载资源时，先根据这个资源的一些"),v("code",[e._v("http header")]),e._v("判断它是否命中强缓存，强缓存如果命中，浏览器直接从自己的缓存中读取资源，不会发请求到服务器。比如某个"),v("code",[e._v("css")]),e._v("文件，如果浏览器在加载它所在的网页时，这个"),v("code",[e._v("css")]),e._v("文件的缓存配置命中了强缓存，浏览器就直接从缓存中加载这个"),v("code",[e._v("css")]),e._v("，连请求都不会发送到网页所在服务器")]),e._v(" "),v("li",[e._v("当强缓存没有命中的时候，浏览器一定会发送一个请求到服务器，通过服务器端依据资源的另外一些"),v("code",[e._v("http header")]),e._v("验证这个资源是否命中协商缓存，如果协商缓存命中，服务器会将这个请求返回，但是不会返回这个资源的数据，而是告诉客户端可以直接从缓存中加载这个资源，于是浏览器就又会从自己的缓存中去加载这个资源")]),e._v(" "),v("li",[v("strong",[e._v("强缓存与协商缓存的共同点是")]),e._v("：如果命中，都是从客户端缓存中加载资源，而不是从服务器加载资源数据；区别是："),v("strong",[e._v("强缓存不发请求到服务器")]),e._v("，协商缓存会发请求到服务器")]),e._v(" "),v("li",[e._v("当协商缓存也没有命中的时候，浏览器直接从服务器加载资源数据")])]),e._v(" "),v("h1",{attrs:{id:"二、强缓存的原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二、强缓存的原理"}},[e._v("#")]),e._v(" 二、强缓存的原理")]),e._v(" "),v("h2",{attrs:{id:"_2-1-介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-介绍"}},[e._v("#")]),e._v(" 2.1 介绍")]),e._v(" "),v("blockquote",[v("p",[e._v("当浏览器对某个资源的请求命中了强缓存时，返回的"),v("code",[e._v("http")]),e._v("状态为"),v("code",[e._v("200")]),e._v("，在"),v("code",[e._v("chrome")]),e._v("的开发者工具的"),v("code",[e._v("network")]),e._v("里面"),v("code",[e._v("size")]),e._v("会显示为"),v("code",[e._v("from cache")]),e._v("，比如京东的首页里就有很多静态资源配置了强缓存，用"),v("code",[e._v("chrome")]),e._v("打开几次，再用"),v("code",[e._v("f12")]),e._v("查看"),v("code",[e._v("network")]),e._v("，可以看到有不少请求就是从缓存中加载的")])]),e._v(" "),v("p",[v("img",{attrs:{src:"https://poetries1.gitee.io/img-repo/2019/10/1.png",alt:""}})]),e._v(" "),v("ul",[v("li",[e._v("强缓存是利用"),v("code",[e._v("Expires")]),e._v("或者"),v("code",[e._v("Cache-Control")]),e._v("这两个"),v("code",[e._v("http response header")]),e._v("实现的，它们都用来表示资源在客户端缓存的有效期。")])]),e._v(" "),v("blockquote",[v("p",[v("code",[e._v("Expires")]),e._v("是"),v("code",[e._v("http1.0")]),e._v("提出的一个表示资源过期时间的"),v("code",[e._v("header")]),e._v("，它描述的是一个绝对时间，由服务器返回，用"),v("code",[e._v("GMT")]),e._v("格式的字符串表示，如："),v("code",[e._v("Expires:Thu, 31 Dec 2037 23:55:55 GMT")])])]),e._v(" "),v("h2",{attrs:{id:"_2-2-expires缓存原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-expires缓存原理"}},[e._v("#")]),e._v(" 2.2 Expires缓存原理")]),e._v(" "),v("ol",[v("li",[e._v("浏览器第一次跟服务器请求一个资源，服务器在返回这个资源的同时，在"),v("code",[e._v("respone")]),e._v("的"),v("code",[e._v("header")]),e._v("加上"),v("code",[e._v("Expires")]),e._v("，如")])]),e._v(" "),v("p",[v("img",{attrs:{src:"https://poetries1.gitee.io/img-repo/2019/10/2.png",alt:""}})]),e._v(" "),v("ol",{attrs:{start:"2"}},[v("li",[e._v("浏览器在接收到这个资源后，会把这个资源连同所有"),v("code",[e._v("response header")]),e._v("一起缓存下来（所以缓存命中的请求返回的"),v("code",[e._v("header")]),e._v("并不是来自服务器，而是来自之前缓存的"),v("code",[e._v("header")]),e._v("）")]),e._v(" "),v("li",[e._v("浏览器再请求这个资源时，先从缓存中寻找，找到这个资源后，拿出它的"),v("code",[e._v("Expires")]),e._v("跟当前的请求时间比较，如果请求时间在"),v("code",[e._v("Expires")]),e._v("指定的时间之前，就能命中缓存，否则就不行")]),e._v(" "),v("li",[e._v("如果缓存没有命中，浏览器直接从服务器加载资源时，"),v("code",[e._v("Expires Header")]),e._v("在重新加载的时候会被更新")])]),e._v(" "),v("blockquote",[v("p",[v("code",[e._v("Expires")]),e._v("是较老的强缓存管理"),v("code",[e._v("header")]),e._v("，由于它是服务器返回的一个绝对时间，在服务器时间与客户端时间相差较大时，缓存管理容易出现问题，比如随意修改下客户端时间，就能影响缓存命中的结果。所以在"),v("code",[e._v("http1.1")]),e._v("的时候，提出了一个新的"),v("code",[e._v("header")]),e._v("，就是"),v("code",[e._v("Cache-Control")]),e._v("，这是一个相对时间，在配置缓存的时候，以秒为单位，用数值表示，如："),v("code",[e._v("Cache-Control:max-age=315360000")])])]),e._v(" "),v("h2",{attrs:{id:"_2-3-cache-control缓存原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-cache-control缓存原理"}},[e._v("#")]),e._v(" 2.3 Cache-Control缓存原理")]),e._v(" "),v("ol",[v("li",[e._v("浏览器第一次跟服务器请求一个资源，服务器在返回这个资源的同时，在"),v("code",[e._v("respone")]),e._v("的"),v("code",[e._v("header")]),e._v("加上"),v("code",[e._v("Cache-Control")]),e._v("，如：")])]),e._v(" "),v("p",[v("img",{attrs:{src:"https://poetries1.gitee.io/img-repo/2019/10/3.png",alt:""}})]),e._v(" "),v("ol",{attrs:{start:"2"}},[v("li",[e._v("浏览器在接收到这个资源后，会把这个资源连同所有"),v("code",[e._v("response header")]),e._v("一起缓存下来")]),e._v(" "),v("li",[e._v("浏览器再请求这个资源时，先从缓存中寻找，找到这个资源后，根据它第一次的请求时间和"),v("code",[e._v("Cache-Control")]),e._v("设定的有效期，计算出一个资源过期时间，再拿这个过期时间跟当前的请求时间比较，如果请求时间在过期时间之前，就能命中缓存，否则就不行")]),e._v(" "),v("li",[e._v("如果缓存没有命中，浏览器直接从服务器加载资源时，"),v("code",[e._v("Cache-Control Header")]),e._v("在重新加载的时候会被更新")])]),e._v(" "),v("ul",[v("li",[v("code",[e._v("Cache-Control")]),e._v("描述的是一个相对时间，在进行缓存命中的时候，都是利用客户端时间进行判断，所以相比较"),v("code",[e._v("Expires")]),e._v("，"),v("code",[e._v("Cache-Control")]),e._v("的缓存管理更有效，安全一些。")]),e._v(" "),v("li",[e._v("这两个"),v("code",[e._v("header")]),e._v("可以只启用一个，也可以同时启用，当"),v("code",[e._v("response header")]),e._v("中，"),v("code",[e._v("Expires")]),e._v("和"),v("code",[e._v("Cache-Control")]),e._v("同时存在时，"),v("code",[e._v("Cache-Control")]),e._v("优先级高于"),v("code",[e._v("Expires")]),e._v("：")])]),e._v(" "),v("p",[v("img",{attrs:{src:"https://poetries1.gitee.io/img-repo/2019/10/4.png",alt:""}})]),e._v(" "),v("h1",{attrs:{id:"三、强缓存的管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三、强缓存的管理"}},[e._v("#")]),e._v(" 三、强缓存的管理")]),e._v(" "),v("blockquote",[v("p",[e._v("前面介绍的是强缓存的原理，在实际应用中我们会碰到需要强缓存的场景和不需要强缓存的场景，通常有2种方式来设置是否启用强缓存")])]),e._v(" "),v("ol",[v("li",[e._v("通过代码的方式，在"),v("code",[e._v("web")]),e._v("服务器返回的响应中添加"),v("code",[e._v("Expires")]),e._v("和"),v("code",[e._v("Cache-Control Header")])]),e._v(" "),v("li",[e._v("通过配置"),v("code",[e._v("web")]),e._v("服务器的方式，让"),v("code",[e._v("web")]),e._v("服务器在响应资源的时候统一添加"),v("code",[e._v("Expires")]),e._v("和"),v("code",[e._v("Cache-Control Header")])])]),e._v(" "),v("blockquote",[v("p",[e._v("比如在javaweb里面，我们可以使用类似下面的代码设置强缓存")])]),e._v(" "),v("div",{staticClass:"language-java extra-class"},[v("pre",{pre:!0,attrs:{class:"language-java"}},[v("code",[e._v("java"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("util"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),v("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Date")]),e._v(" date "),v("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" java"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("util"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),v("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Date")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("    \nresponse"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[e._v("setDateHeader")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Expires"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("date"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[e._v("getTime")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),v("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),v("span",{pre:!0,attrs:{class:"token number"}},[e._v("20000")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[e._v("//Expires:过时期限值 ")]),e._v("\nresponse"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[e._v("setHeader")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Cache-Control"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[e._v('"public"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[e._v("//Cache-Control来控制页面的缓存与否,public:浏览器和缓存服务器都可以缓存页面信息；")]),e._v("\nresponse"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[e._v("setHeader")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Pragma"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Pragma"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[e._v("//Pragma:设置页面是否缓存，为Pragma则缓存，no-cache则不缓存")]),e._v("\n")])])]),v("blockquote",[v("p",[e._v("还可以通过类似下面的"),v("code",[e._v("java")]),e._v("代码设置不启用强缓存")])]),e._v(" "),v("div",{staticClass:"language-java extra-class"},[v("pre",{pre:!0,attrs:{class:"language-java"}},[v("code",[e._v("response"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[e._v("setHeader")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Pragma"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[e._v('"no-cache"')]),e._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("   \nresponse"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[e._v("setDateHeader")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Expires"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("   \nresponse"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[e._v("addHeader")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Cache-Control"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[e._v('"no-cache"')]),e._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),v("span",{pre:!0,attrs:{class:"token comment"}},[e._v("//浏览器和缓存服务器都不应该缓存页面信息")]),e._v("\n")])])]),v("ul",[v("li",[v("code",[e._v("nginx")]),e._v("和"),v("code",[e._v("apache")]),e._v("作为专业的"),v("code",[e._v("web")]),e._v("服务器，都有专门的配置文件，可以配置"),v("code",[e._v("expires")]),e._v("和"),v("code",[e._v("cache-control")]),e._v("，这方面的知识，如果你对运维感兴趣的话，可以在百度上搜索"),v("code",[e._v("nginx")]),e._v(" 设置 "),v("code",[e._v("expires cache-control")]),e._v("或 "),v("code",[e._v("apache 设置 expires cache-control")]),e._v(" 都能找到不少相关的文章。")]),e._v(" "),v("li",[e._v("由于在开发的时候不会专门去配置强缓存，而浏览器又默认会缓存图片，"),v("code",[e._v("css")]),e._v("和"),v("code",[e._v("js")]),e._v("等静态资源，所以开发环境下经常会因为强缓存导致资源没有及时更新而看不到最新的效果，解决这个问题的方法有很多，常用的有以下几种")])]),e._v(" "),v("p",[v("strong",[e._v("处理缓存带来的问题")])]),e._v(" "),v("ol",[v("li",[e._v("直接"),v("code",[e._v("ctrl+f5")]),e._v("，这个办法能解决页面直接引用的资源更新的问题")]),e._v(" "),v("li",[e._v("使用浏览器的隐私模式开发")]),e._v(" "),v("li",[e._v("如果用的是"),v("code",[e._v("chrome")]),e._v("，可以"),v("code",[e._v("f12")]),e._v("在"),v("code",[e._v("network")]),e._v("那里把缓存给禁掉（这是个非常有效的方法）")])]),e._v(" "),v("p",[v("img",{attrs:{src:"https://poetries1.gitee.io/img-repo/2019/10/5.png",alt:""}})]),e._v(" "),v("ol",{attrs:{start:"4"}},[v("li",[e._v("在开发阶段，给资源加上一个动态的参数，如"),v("code",[e._v("css/index.css?v=0.0001")]),e._v("，由于每次资源的修改都要更新引用的位置，同时修改参数的值，所以操作起来不是很方便，除非你是在动态页面比如jsp里开发就可以用服务器变量来解决（"),v("code",[e._v("v=${sysRnd}")]),e._v("），或者你能用一些前端的构建工具来处理这个参数修改的问题")]),e._v(" "),v("li",[e._v("如果资源引用的页面，被嵌入到了一个"),v("code",[e._v("iframe")]),e._v("里面，可以在"),v("code",[e._v("iframe")]),e._v("的区域右键单击重新加载该页面，以"),v("code",[e._v("chrome")]),e._v("为例")])]),e._v(" "),v("p",[v("img",{attrs:{src:"https://poetries1.gitee.io/img-repo/2019/10/6.png",alt:""}})]),e._v(" "),v("ol",{attrs:{start:"6"}},[v("li",[e._v("如果缓存问题出现在"),v("code",[e._v("ajax")]),e._v("请求中，最有效的解决办法就是"),v("code",[e._v("ajax")]),e._v("的请求地址追加随机数")]),e._v(" "),v("li",[e._v("还有一种情况就是动态设置"),v("code",[e._v("iframe")]),e._v("的"),v("code",[e._v("src")]),e._v("时，有可能也会因为缓存问题，导致看不到最新的效果，这时候在要设置的"),v("code",[e._v("src")]),e._v("后面添加随机数也能解决问题")]),e._v(" "),v("li",[e._v("如果你用的是"),v("code",[e._v("grunt")]),e._v("和"),v("code",[e._v("gulp")]),e._v("、"),v("code",[e._v("webpack")]),e._v("这种前端工具开发，通过它们的插件比如"),v("code",[e._v("grunt-contrib-connect")]),e._v("来启动一个静态服务器，则完全不用担心开发阶段的资源更新问题，因为在这个静态服务器下的所有资源返回的"),v("code",[e._v("respone header")]),e._v("中，"),v("code",[e._v("cache-control")]),e._v("始终被设置为不缓存")])]),e._v(" "),v("p",[v("img",{attrs:{src:"https://poetries1.gitee.io/img-repo/2019/10/7.png",alt:""}})]),e._v(" "),v("h1",{attrs:{id:"四、强缓存的应用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#四、强缓存的应用"}},[e._v("#")]),e._v(" 四、强缓存的应用")]),e._v(" "),v("blockquote",[v("p",[e._v("强缓存是前端性能优化最有力的工具，没有之一，对于有大量静态资源的网页，一定要利用强缓存，提高响应速度。通常的做法是，为这些静态资源全部配置一个超时时间超长的"),v("code",[e._v("Expires")]),e._v("或"),v("code",[e._v("Cache-Control")]),e._v("，这样用户在访问网页时，只会在第一次加载时从服务器请求静态资源，其它时候只要缓存没有失效并且用户没有强制刷新的条件下都会从自己的缓存中加载，比如前面提到过的京东首页缓存的资源，它的缓存过期时间都设置到了"),v("code",[e._v("2026")]),e._v("年")])]),e._v(" "),v("p",[v("img",{attrs:{src:"https://poetries1.gitee.io/img-repo/2019/10/8.png",alt:""}})]),e._v(" "),v("blockquote",[v("p",[e._v("然而这种缓存配置方式会带来一个新的问题，就是发布时资源更新的问题，比如某一张图片，在用户访问第一个版本的时候已经缓存到了用户的电脑上，当网站发布新版本，替换了这个图片时，已经访问过第一个版本的用户由于缓存的设置，导致在默认的情况下不会请求服务器最新的图片资源，除非他清掉或禁用缓存或者强制刷新，否则就看不到最新的图片效果")])]),e._v(" "),v("p",[e._v("这个问题已经有成熟的解决方案，具体内容可阅读知乎这篇文章详细了解：http://www.zhihu.com/question/20790576")]),e._v(" "),v("p",[e._v("文章提到的东西都属于理论上的解决方案，不过现在已经有很多前端工具能够实际地解决这个问题，由于每个工具涉及到的内容细节都有很多，本文没有办法一一深入介绍。有兴趣的可以去了解下"),v("code",[e._v("grunt")]),e._v(" "),v("code",[e._v("gulp")]),e._v(" "),v("code",[e._v("webpack")]),e._v(" "),v("code",[e._v("fis")]),e._v(" 还有edp这几个工具，基于这几个工具都能解决这个问题，尤其是"),v("code",[e._v("fis")]),e._v("和"),v("code",[e._v("edp")]),e._v("是百度推出的前端开发平台，有现成的文档可以参考：")]),e._v(" "),v("p",[e._v("http://fis.baidu.com/fis3/api/index.html")]),e._v(" "),v("p",[e._v("http://ecomfe.github.io/edp/doc/initialization/install/")]),e._v(" "),v("blockquote",[v("p",[e._v("强缓存还有一点需要注意的是，通常都是针对静态资源使用，动态资源需要慎用，除了服务端页面可以看作动态资源外，那些引用静态资源的"),v("code",[e._v("html")]),e._v("也可以看作是动态资源，如果这种"),v("code",[e._v("html")]),e._v("也被缓存，当这些"),v("code",[e._v("html")]),e._v("更新之后，可能就没有机制能够通知浏览器这些html有更新，尤其是前后端分离的应用里，页面都是纯"),v("code",[e._v("html")]),e._v("页面，每个访问地址可能都是直接访问"),v("code",[e._v("html")]),e._v("页面，这些页面通常不加强缓存，以保证浏览器访问这些页面时始终请求服务器最新的资源")])]),e._v(" "),v("h1",{attrs:{id:"五、协商缓存的原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#五、协商缓存的原理"}},[e._v("#")]),e._v(" 五、协商缓存的原理")]),e._v(" "),v("h2",{attrs:{id:"_5-1-介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-介绍"}},[e._v("#")]),e._v(" 5.1 介绍")]),e._v(" "),v("blockquote",[v("p",[e._v("当浏览器对某个资源的请求没有命中强缓存，就会发一个请求到服务器，验证协商缓存是否命中，如果协商缓存命中，请求响应返回的"),v("code",[e._v("http")]),e._v("状态为"),v("code",[e._v("304")]),e._v("并且会显示一个"),v("code",[e._v("Not Modified")]),e._v("的字符串，比如你打开京东的首页，按"),v("code",[e._v("f12")]),e._v("打开开发者工具，再按"),v("code",[e._v("f5")]),e._v("刷新页面，查看"),v("code",[e._v("network")]),e._v("，可以看到有不少请求就是命中了协商缓存的")])]),e._v(" "),v("p",[v("img",{attrs:{src:"https://poetries1.gitee.io/img-repo/2019/10/9.png",alt:""}})]),e._v(" "),v("blockquote",[v("p",[e._v("查看单个请求的"),v("code",[e._v("Response Header")]),e._v("，也能看到"),v("code",[e._v("304")]),e._v("的状态码和"),v("code",[e._v("Not Modified")]),e._v("的字符串，只要看到这个就可说明这个资源是命中了协商缓存，然后从客户端缓存中加载的，而不是服务器最新的资源")])]),e._v(" "),v("p",[v("img",{attrs:{src:"https://poetries1.gitee.io/img-repo/2019/10/10.png",alt:""}})]),e._v(" "),v("h2",{attrs:{id:"_5-2-last-modified，if-modified-since控制协商缓存"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-last-modified，if-modified-since控制协商缓存"}},[e._v("#")]),e._v(" 5.2 Last-Modified，If-Modified-Since控制协商缓存")]),e._v(" "),v("ol",[v("li",[e._v("浏览器第一次跟服务器请求一个资源，服务器在返回这个资源的同时，在"),v("code",[e._v("respone")]),e._v("的"),v("code",[e._v("header")]),e._v("加上"),v("code",[e._v("Last-Modified")]),e._v("的"),v("code",[e._v("header")]),e._v("，这个"),v("code",[e._v("header")]),e._v("表示这个资源在服务器上的最后修改时间")])]),e._v(" "),v("p",[v("img",{attrs:{src:"https://poetries1.gitee.io/img-repo/2019/10/11.png",alt:""}})]),e._v(" "),v("ol",{attrs:{start:"2"}},[v("li",[e._v("浏览器再次跟服务器请求这个资源时，在"),v("code",[e._v("request")]),e._v("的"),v("code",[e._v("header")]),e._v("上加上"),v("code",[e._v("If-Modified-Since")]),e._v("的"),v("code",[e._v("header")]),e._v("，这个"),v("code",[e._v("header")]),e._v("的值就是上一次请求时返回的"),v("code",[e._v("Last-Modified")]),e._v("的值")])]),e._v(" "),v("p",[v("img",{attrs:{src:"https://poetries1.gitee.io/img-repo/2019/10/12.png",alt:""}})]),e._v(" "),v("ol",{attrs:{start:"3"}},[v("li",[e._v("服务器再次收到资源请求时，根据浏览器传过来"),v("code",[e._v("If-Modified-Since")]),e._v("和资源在服务器上的最后修改时间判断资源是否有变化，如果没有变化则返回"),v("code",[e._v("304 Not Modified")]),e._v("，但是不会返回资源内容；如果有变化，就正常返回资源内容。当服务器返回"),v("code",[e._v("304 Not Modified")]),e._v("的响应时，"),v("code",[e._v("response header")]),e._v("中不会再添加"),v("code",[e._v("Last-Modified")]),e._v("的"),v("code",[e._v("header")]),e._v("，因为既然资源没有变化，那么"),v("code",[e._v("Last-Modified")]),e._v("也就不会改变，这是服务器返回"),v("code",[e._v("304")]),e._v("时的"),v("code",[e._v("response header")])])]),e._v(" "),v("p",[v("img",{attrs:{src:"https://poetries1.gitee.io/img-repo/2019/10/13.png",alt:""}})]),e._v(" "),v("ol",{attrs:{start:"4"}},[v("li",[e._v("浏览器收到"),v("code",[e._v("304")]),e._v("的响应后，就会从缓存中加载资源")]),e._v(" "),v("li",[e._v("如果协商缓存没有命中，浏览器直接从服务器加载资源时，"),v("code",[e._v("Last-Modified")]),e._v(" "),v("code",[e._v("Header")]),e._v("在重新加载的时候会被更新，下次请求时，"),v("code",[e._v("If-Modified-Since")]),e._v("会启用上次返回的"),v("code",[e._v("Last-Modified")]),e._v("值")])]),e._v(" "),v("blockquote",[v("p",[e._v("【"),v("code",[e._v("Last-Modified")]),e._v("，"),v("code",[e._v("If-Modified-Since")]),e._v("】都是根据服务器时间返回的"),v("code",[e._v("header")]),e._v("，一般来说，在没有调整服务器时间和篡改客户端缓存的情况下，这两个"),v("code",[e._v("header")]),e._v("配合起来管理协商缓存是非常可靠的，但是有时候也会服务器上资源其实有变化，但是最后修改时间却没有变化的情况，而这种问题又很不容易被定位出来，而当这种情况出现的时候，就会影响协商缓存的可靠性。所以就有了另外一对"),v("code",[e._v("header")]),e._v("来管理协商缓存，这对"),v("code",[e._v("header")]),e._v("就是【"),v("code",[e._v("ETag")]),e._v("、"),v("code",[e._v("If-None-Match")]),e._v("】。它们的缓存管理的方式是")])]),e._v(" "),v("h2",{attrs:{id:"_5-3-etag、if-none-match控制协商缓存"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-etag、if-none-match控制协商缓存"}},[e._v("#")]),e._v(" 5.3 ETag、If-None-Match控制协商缓存")]),e._v(" "),v("ol",[v("li",[e._v("浏览器第一次跟服务器请求一个资源，服务器在返回这个资源的同时，在"),v("code",[e._v("respone")]),e._v("的"),v("code",[e._v("header")]),e._v("加上"),v("code",[e._v("ETag")]),e._v("的"),v("code",[e._v("header")]),e._v("，这个"),v("code",[e._v("header")]),e._v("是服务器根据当前请求的资源生成的一个唯一标识，这个唯一标识是一个字符串，只要资源有变化这个串就不同，跟最后修改时间没有关系，所以能很好的补充"),v("code",[e._v("Last-Modified")]),e._v("的问题")])]),e._v(" "),v("p",[v("img",{attrs:{src:"https://poetries1.gitee.io/img-repo/2019/10/14.png",alt:""}})]),e._v(" "),v("ol",{attrs:{start:"2"}},[v("li",[e._v("浏览器再次跟服务器请求这个资源时，在"),v("code",[e._v("request")]),e._v("的"),v("code",[e._v("header")]),e._v("上加上"),v("code",[e._v("If-None-Match")]),e._v("的"),v("code",[e._v("header")]),e._v("，这个"),v("code",[e._v("header")]),e._v("的值就是上一次请求时返回的"),v("code",[e._v("ETag")]),e._v("的值")])]),e._v(" "),v("p",[v("img",{attrs:{src:"https://poetries1.gitee.io/img-repo/2019/10/15.png",alt:""}})]),e._v(" "),v("ol",{attrs:{start:"3"}},[v("li",[e._v("服务器再次收到资源请求时，根据浏览器传过来"),v("code",[e._v("If-None-Match")]),e._v("和然后再根据资源生成一个新的"),v("code",[e._v("ETag")]),e._v("，如果这两个值相同就说明资源没有变化，否则就是有变化；如果没有变化则返回"),v("code",[e._v("304 Not Modified")]),e._v("，但是不会返回资源内容；如果有变化，就正常返回资源内容。与"),v("code",[e._v("Last-Modified")]),e._v("不一样的是，当服务器返回"),v("code",[e._v("304 Not Modified")]),e._v("的响应时，由于"),v("code",[e._v("ETag")]),e._v("重新生成过，"),v("code",[e._v("response header")]),e._v("中还会把这个"),v("code",[e._v("ETag")]),e._v("返回，即使这个"),v("code",[e._v("ETag")]),e._v("跟之前的没有变化")])]),e._v(" "),v("p",[v("img",{attrs:{src:"https://poetries1.gitee.io/img-repo/2019/10/16.png",alt:""}})]),e._v(" "),v("ol",{attrs:{start:"4"}},[v("li",[e._v("浏览器收到"),v("code",[e._v("304")]),e._v("的响应后，就会从缓存中加载资源。")])]),e._v(" "),v("h1",{attrs:{id:"六、协商缓存的管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#六、协商缓存的管理"}},[e._v("#")]),e._v(" 六、协商缓存的管理")]),e._v(" "),v("blockquote",[v("p",[e._v("协商缓存跟强缓存不一样，强缓存不发请求到服务器，所以有时候资源更新了浏览器还不知道，但是协商缓存会发请求到服务器，所以资源是否更新，服务器肯定知道。大部分"),v("code",[e._v("web")]),e._v("服务器都默认开启协商缓存，而且是同时启用【"),v("code",[e._v("Last-Modified")]),e._v("，"),v("code",[e._v("If-Modified-Since")]),e._v("】和【"),v("code",[e._v("ETag")]),e._v("、"),v("code",[e._v("If-None-Match")]),e._v("】，比如"),v("code",[e._v("apache")]),e._v(":")])]),e._v(" "),v("p",[v("img",{attrs:{src:"https://poetries1.gitee.io/img-repo/2019/10/17.png",alt:""}})]),e._v(" "),v("blockquote",[v("p",[e._v("如果没有协商缓存，每个到服务器的请求，就都得返回资源内容，这样服务器的性能会极差。")])]),e._v(" "),v("ul",[v("li",[e._v("【"),v("code",[e._v("Last-Modified")]),e._v("，"),v("code",[e._v("If-Modified-Since")]),e._v("】和【"),v("code",[e._v("ETag")]),e._v("、"),v("code",[e._v("If-None-Match")]),e._v("】一般都是同时启用，这是为了处理"),v("code",[e._v("Last-Modified")]),e._v("不可靠的情况。")])]),e._v(" "),v("p",[v("strong",[e._v("有一种场景需要注意")])]),e._v(" "),v("ul",[v("li",[e._v("分布式系统里多台机器间文件的"),v("code",[e._v("Last-Modified")]),e._v("必须保持一致，以免负载均衡到不同机器导致比对失败；")]),e._v(" "),v("li",[e._v("分布式系统尽量关闭掉"),v("code",[e._v("ETag")]),e._v("(每台机器生成的"),v("code",[e._v("ETag")]),e._v("都会不一样）；")]),e._v(" "),v("li",[e._v("京东页面的资源请求，返回的"),v("code",[e._v("repsones header")]),e._v("就只有"),v("code",[e._v("Last-Modified")]),e._v("，没有"),v("code",[e._v("ETag")]),e._v("：")])]),e._v(" "),v("p",[v("img",{attrs:{src:"https://poetries1.gitee.io/img-repo/2019/10/18.png",alt:""}})]),e._v(" "),v("blockquote",[v("p",[e._v("协商缓存需要配合强缓存使用，你看前面这个截图中，除了"),v("code",[e._v("Last-Modified")]),e._v("这个"),v("code",[e._v("header")]),e._v("，还有强缓存的相关"),v("code",[e._v("header")]),e._v("，因为如果不启用强缓存的话，协商缓存根本没有意义")])]),e._v(" "),v("h1",{attrs:{id:"七、相关浏览器行为对缓存的影响"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#七、相关浏览器行为对缓存的影响"}},[e._v("#")]),e._v(" 七、相关浏览器行为对缓存的影响")]),e._v(" "),v("blockquote",[v("p",[e._v("如果资源已经被浏览器缓存下来，在缓存失效之前，再次请求时，默认会先检查是否命中强缓存，如果强缓存命中则直接读取缓存，如果强缓存没有命中则发请求到服务器检查是否命中协商缓存，如果协商缓存命中，则告诉浏览器还是可以从缓存读取，否则才从服务器返回最新的资源。这是默认的处理方式，这个方式可能被浏览器的行为改变：")])]),e._v(" "),v("ul",[v("li",[e._v("当"),v("code",[e._v("ctrl+f5")]),e._v("强制刷新网页时，直接从服务器加载，跳过强缓存和协商缓存；")]),e._v(" "),v("li",[e._v("当"),v("code",[e._v("f5")]),e._v("刷新网页时，跳过强缓存，但是会检查协商缓存")])])])}),[],!1,null,null,null);t.default=a.exports}}]);
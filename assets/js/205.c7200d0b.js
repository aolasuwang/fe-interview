(window.webpackJsonp=window.webpackJsonp||[]).push([[205],{765:function(a,n,l){"use strict";l.r(n);var e=l(10),s=Object(e.a)({},(function(){var a=this,n=a.$createElement,l=a._self._c||n;return l("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[l("ul",[l("li",[l("code",[a._v("call()")]),a._v("、"),l("code",[a._v("apply()")]),a._v("、"),l("code",[a._v("bind()")]),a._v("都是函数对象的一个方法，它们的作用都是改变函数的调用对象。它的使用极大的简化了代码的调用")])]),a._v(" "),l("h4",{attrs:{id:"一、方法定义"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#一、方法定义"}},[a._v("#")]),a._v(" 一、方法定义")]),a._v(" "),l("ul",[l("li",[l("strong",[a._v("call方法")])]),a._v(" "),l("li",[a._v("语法")])]),a._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[a._v("fun.call(thisArg[, arg1[, arg2[, ...]]])\n")])])]),l("ul",[l("li",[l("code",[a._v("thisArg")]),a._v("："),l("code",[a._v("fun")]),a._v("函数运行时指定的"),l("code",[a._v("this")]),a._v("值，可能的值为：\n"),l("ul",[l("li",[a._v("不传，或者传"),l("code",[a._v("null")]),a._v("，"),l("code",[a._v("undefined")]),a._v("， "),l("code",[a._v("this")]),a._v("指向"),l("code",[a._v("window")]),a._v("对象")]),a._v(" "),l("li",[a._v("传递另一个函数的函数名"),l("code",[a._v("fun2")]),a._v("，"),l("code",[a._v("this")]),a._v("指向函数fun2的引用\n值为原始值(数字，字符串，布尔值),this会指向该原始值的自动包装对象，如 String、Number、Boolean")]),a._v(" "),l("li",[a._v("传递一个对象，函数中的"),l("code",[a._v("this")]),a._v("指向这个对象")])])])]),a._v(" "),l("ul",[l("li",[l("p",[l("strong",[a._v("apply方法")])])]),a._v(" "),l("li",[l("p",[a._v("语法："),l("code",[a._v("apply([thisObj[,argArray]])")])]),a._v(" "),l("ul",[l("li",[a._v("定义：应用某一对象的一个方法，用另一个对象替换当前对象。")]),a._v(" "),l("li",[a._v("说明："),l("code",[a._v("apply")]),a._v("的第一个参数"),l("code",[a._v("thisObj")]),a._v("和"),l("code",[a._v("call")]),a._v("方法的一样，第二个参数"),l("code",[a._v("argArray")]),a._v("为一个传参数组"),l("code",[a._v("thisObj")]),a._v("如果未传，那么 "),l("code",[a._v("Global")]),a._v("对象被用作 "),l("code",[a._v("thisObj")])])])]),a._v(" "),l("li",[l("p",[l("strong",[a._v("bind方法")])]),a._v(" "),l("ul",[l("li",[l("p",[a._v("在"),l("code",[a._v("ECMAScript5")]),a._v("中扩展了叫"),l("code",[a._v("bind")]),a._v("的方法（"),l("code",[a._v("IE6,7,8")]),a._v("不支持）")])]),a._v(" "),l("li",[l("p",[a._v("语法："),l("code",[a._v("bind([thisObj[,arg1[, arg2[, [,.argN]]]]])")])])]),a._v(" "),l("li",[l("p",[a._v("定义：应用某一对象的一个方法，用另一个对象替换当前对象。")])]),a._v(" "),l("li",[l("p",[a._v("说明："),l("code",[a._v("bind")]),a._v("的"),l("code",[a._v("thisObj")]),a._v("参数也和"),l("code",[a._v("call")]),a._v("方法一样，"),l("code",[a._v("thisObj")]),a._v("如果未传，那么 "),l("code",[a._v("Global")]),a._v("对象被用作 "),l("code",[a._v("thisObj")]),a._v("。arg1 … argN可传可不传。如果不传，可以在调用的时候再传。如果传了，调用的时候则可以不传，调用的时候如果你还是传了，则不生效")])])])])]),a._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[a._v('var person = {\n    name:"tsrot",\n    age:24,\n    sayHello:function(age){\n        console.log(this.name);\n        console.log(age);\n    }\n    };\nvar son = {\n name:"xieliqun"\n };\nvar boundFunc = person.sayHello.bind(son);\nboundFunc(25); \n')])])]),l("div",{staticClass:"language- extra-class"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[a._v("var boundFunc = person.sayHello.bind(son,25);\nboundFunc(); \n")])])]),l("div",{staticClass:"language- extra-class"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[a._v("var boundFunc = person.sayHello.bind(son,25);\nboundFunc(30); \n")])])]),l("h4",{attrs:{id:"二、call、apply、bind的区别"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#二、call、apply、bind的区别"}},[a._v("#")]),a._v(" 二、call、apply、bind的区别")]),a._v(" "),l("ul",[l("li",[l("code",[a._v("call")]),a._v("的"),l("code",[a._v("arg")]),a._v("传参需一个一个传，"),l("code",[a._v("apply")]),a._v("则直接传一个数组")])]),a._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[a._v('function hello(name,age){\n console.log(name);\n  console.log(age);\n  }\nhello.call(this,"tsrot",24);\nhello.apply(this,["tsrot",24]);\n')])])]),l("ul",[l("li",[l("code",[a._v("call")]),a._v("和"),l("code",[a._v("apply")]),a._v("直接执行函数，而"),l("code",[a._v("bind")]),a._v("需要再一次调用")])]),a._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[a._v("var obj = {\n    x: 81,\n    };\nvar foo = {\n    getX: function() {\n        return this.x;\n    }\n    }\nconsole.log(foo.getX.bind(obj)());  \nconsole.log(foo.getX.call(obj));    \nconsole.log(foo.getX.apply(obj));   \n")])])]),l("h4",{attrs:{id:"三、运用场景"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#三、运用场景"}},[a._v("#")]),a._v(" 三、运用场景")]),a._v(" "),l("ul",[l("li",[a._v("实现继承")])]),a._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[a._v("function Animal(name) {\n  this.name = name;\n  this.showName = function () {\n    console.log(this.name);\n  }\n  }\nfunction Cat(name) {\n  Animal.call(this, name); \n  }\nvar cat = new Cat('Black Cat');\ncat.showName(); \n")])])]),l("ul",[l("li",[a._v("数组追加")])]),a._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[a._v('var array1 = [1 , 2 , 3, 5];\nvar array2 = ["xie" , "li" , "qun" , "tsrot"];\nArray.prototype.push.apply(array1, array2);\nconsole.log(array1);\n')])])]),l("ul",[l("li",[a._v("获取数组中的最大值和最小值")])]),a._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[a._v("var num = [1,3,5,7,2,-10,11];\nvar maxNum = Math.max.apply(Math, num);\nvar minNum = Math.min.apply(Math, num);\nconsole.log(maxNum); \nconsole.log(minNum); \n")])])]),l("ul",[l("li",[a._v("将伪数组转化为数组")])]),a._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[a._v("var fakeArr = {0:'a',1:'b',length:2};\nvar arr1 = Array.prototype.slice.call(fakeArr);\nconsole.log(arr1[0]); \nvar arr2 = [].slice.call(fakeArr);\nconsole.log(arr2[0]); \narr1.push(\"c\");\nconsole.log(arr1); \n")])])]),l("ul",[l("li",[a._v("保存this变量")])]),a._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[a._v("var foo = {\n    bar : 1,\n    eventBind: function(){\n        var _this = this ;\n        $('.someClass').on('click',function(event) {\n            console.log(_this.bar);     \n        });\n    }\n    }\nvar foo = {\n    bar : 1,\n    eventBind: function(){\n        $('.someClass').on('click',function(event) {\n            console.log(this.bar);      \n        }.bind(this));\n    }\n    }\n")])])])])}),[],!1,null,null,null);n.default=s.exports}}]);
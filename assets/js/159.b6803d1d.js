(window.webpackJsonp=window.webpackJsonp||[]).push([[159],{730:function(a,e,s){"use strict";s.r(e);var t=s(10),v=Object(t.a)({},(function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h4",{attrs:{id:"一、什么是持续集成？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、什么是持续集成？"}},[a._v("#")]),a._v(" 一、什么是持续集成？")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("Travis CI")]),a._v(" 提供的是持续集成服务（"),s("code",[a._v("Continuous Integration")]),a._v("，简称 "),s("code",[a._v("CI")]),a._v("）。它绑定 "),s("code",[a._v("Github")]),a._v(" 上面的项目，只要有新的代码，就会自动抓取。然后，提供一个运行环境，执行测试，完成构建，还能部署到服务器。")]),a._v(" "),s("li",[a._v('持续集成指的是只要代码有变更，就自动运行构建和测试，反馈运行结果。确保符合预期以后，再将新代码"集成"到主干。')]),a._v(" "),s("li",[a._v("持续集成的好处在于，每次代码的小幅变更，就能看到运行结果，从而不断累积小的变更，而不是在开发周期结束时，一下子合并一大块代码")])]),a._v(" "),s("h4",{attrs:{id:"二、-travis-yml"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、-travis-yml"}},[a._v("#")]),a._v(" 二、.travis.yml")]),a._v(" "),s("blockquote",[s("p",[a._v("Travis 要求项目的根目录下面，必须有一个"),s("code",[a._v(".travis.yml")]),a._v("文件。这是配置文件，指定了 "),s("code",[a._v("Travis")]),a._v(" 的行为。该文件必须保存在 "),s("code",[a._v("Github")]),a._v(" 仓库里面，一旦代码仓库有新的 "),s("code",[a._v("Commit")]),a._v("，"),s("code",[a._v("Travis")]),a._v("就会去找这个文件，执行里面的命令")])]),a._v(" "),s("ul",[s("li",[a._v("这个文件采用 "),s("code",[a._v("YAML")]),a._v(" 格式。下面是一个最简单的 "),s("code",[a._v("Python")]),a._v(" 项目的"),s("code",[a._v(".travis.yml")]),a._v("文件")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("language: python\nscript: "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("\n")])])]),s("ul",[s("li",[s("code",[a._v("language")]),a._v("字段指定了默认运行环境，这里设定使用 "),s("code",[a._v("Python")]),a._v(" 环境")]),a._v(" "),s("li",[s("code",[a._v("script")]),a._v("字段指定要运行的脚本，"),s("code",[a._v("script: true")]),a._v("表示不执行任何脚本，状态直接设为成功")])]),a._v(" "),s("p",[s("strong",[a._v("面是一个稍微复杂一点的.travis.yml")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("language: python\nsudo: required\nbefore_install: "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" pip "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" foo\nscript: py.test\n")])])]),s("h4",{attrs:{id:"三、运行流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、运行流程"}},[a._v("#")]),a._v(" 三、运行流程")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("Travis")]),a._v(" 的运行流程很简单，任何项目都会经过两个阶段\n"),s("ul",[s("li",[s("code",[a._v("install")]),a._v("  阶段：安装依赖")]),a._v(" "),s("li",[s("code",[a._v("script")]),a._v(" 阶段：运行脚本")])])])]),a._v(" "),s("h5",{attrs:{id:"_3-1-install-阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-install-阶段"}},[a._v("#")]),a._v(" 3.1 install 阶段")]),a._v(" "),s("blockquote",[s("p",[s("code",[a._v("install")]),a._v("字段用来指定安装脚本")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("install: ./install-dependencies.sh\n")])])]),s("ul",[s("li",[a._v("如果有多个脚本，可以写成下面的形式")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("install:\n - command1\n - command2\n")])])]),s("ul",[s("li",[a._v("上面代码中，如果"),s("code",[a._v("command1")]),a._v("失败了，整个构建就会停下来，不再往下进行。")]),a._v(" "),s("li",[a._v("如果不需要安装，即跳过安装阶段，就直接设为"),s("code",[a._v("true")]),a._v("。")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("install: true\n")])])]),s("h5",{attrs:{id:"_3-2、script-字段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2、script-字段"}},[a._v("#")]),a._v(" 3.2、script 字段")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("script")]),a._v("字段用来指定构建或测试脚本")])]),a._v(" "),s("p",[s("code",[a._v("script: bundle exec thor build")])]),a._v(" "),s("ul",[s("li",[a._v("如果有多个脚本，可以写成下面的形式")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("script:\n - command1\n - command2\n")])])]),s("blockquote",[s("p",[s("strong",[a._v("注意")]),a._v("，"),s("code",[a._v("script")]),a._v("与"),s("code",[a._v("install")]),a._v("不一样，如果"),s("code",[a._v("command1")]),a._v("失败，"),s("code",[a._v("command2")]),a._v("会继续执行。但是，整个构建阶段的状态是失败。如果"),s("code",[a._v("command2")]),a._v("只有在"),s("code",[a._v("command1")]),a._v("成功后才能执行，就要写成下面这样。")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("script: command1 && command2\n")])])]),s("h5",{attrs:{id:"_3-3-实例：node-项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-实例：node-项目"}},[a._v("#")]),a._v(" 3.3 实例：Node 项目")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("Node")]),a._v(" 项目的环境需要写成下面这样")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("language: node_js\nnode_js:\n  - "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"8"')]),a._v("\n")])])]),s("ul",[s("li",[a._v("上面代码中，"),s("code",[a._v("node_js")]),a._v("字段用来指定 "),s("code",[a._v("Node")]),a._v(" 版本。")]),a._v(" "),s("li",[s("code",[a._v("Node")]),a._v(" 项目的"),s("code",[a._v("install")]),a._v("和"),s("code",[a._v("script")]),a._v("阶段都有默认脚本，可以省略\n"),s("ul",[s("li",[s("code",[a._v("install")]),a._v("默认值："),s("code",[a._v("npm install")])]),a._v(" "),s("li",[s("code",[a._v("script")]),a._v("默认值："),s("code",[a._v("npm test")])])])])]),a._v(" "),s("h5",{attrs:{id:"_3-4-部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-部署"}},[a._v("#")]),a._v(" 3.4 部署")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("script")]),a._v("阶段结束以后，还可以设置"),s("a",{attrs:{href:"https://docs.travis-ci.com/user/notifications/",target:"_blank",rel:"noopener noreferrer"}},[a._v("通知步骤（notification）"),s("OutboundLink")],1),a._v("和"),s("a",{attrs:{href:"https://docs.travis-ci.com/user/deployment/",target:"_blank",rel:"noopener noreferrer"}},[a._v("部署步骤"),s("OutboundLink")],1),a._v("（deployment），它们不是必须的")])]),a._v(" "),s("blockquote",[s("p",[a._v("部署的脚本可以在"),s("code",[a._v("script")]),a._v("阶段执行，也可以使用 "),s("code",[a._v("Travis")]),a._v(" 为几十种常见服务提供的快捷部署功能。比如，要部署到 "),s("code",[a._v("Github Pages")]),a._v("，可以写成下面这样")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("deploy:\n  provider: pages\n  skip_cleanup: "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("\n  github_token: "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$GITHUB_TOKEN")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Set in travis-ci.org dashboard")]),a._v("\n  on:\n    branch: master\n")])])]),s("ul",[s("li",[s("a",{attrs:{href:"https://docs.travis-ci.com/user/deployment/",target:"_blank",rel:"noopener noreferrer"}},[a._v("其他部署方式"),s("OutboundLink")],1)])]),a._v(" "),s("h5",{attrs:{id:"_3-5-钩子方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-钩子方法"}},[a._v("#")]),a._v(" 3.5 钩子方法")]),a._v(" "),s("blockquote",[s("p",[s("code",[a._v("Travis")]),a._v(" 为上面这些阶段提供了7个钩子")])]),a._v(" "),s("ul",[s("li",[s("code",[a._v("before_install")]),a._v("：install 阶段之前执行")]),a._v(" "),s("li",[s("code",[a._v("before_script")]),a._v("：script 阶段之前执行")]),a._v(" "),s("li",[s("code",[a._v("after_failure")]),a._v("：script 阶段失败时执行")]),a._v(" "),s("li",[s("code",[a._v("after_success")]),a._v("：script 阶段成功时执行")]),a._v(" "),s("li",[s("code",[a._v("before_deploy")]),a._v("：deploy 步骤之前执行")]),a._v(" "),s("li",[s("code",[a._v("after_deploy")]),a._v("：deploy 步骤之后执行")]),a._v(" "),s("li",[s("code",[a._v("after_script")]),a._v("：script 阶段之后执行")])]),a._v(" "),s("blockquote",[s("p",[a._v("完整的生命周期，从开始到结束是下面的流程")])]),a._v(" "),s("ul",[s("li",[s("p",[s("code",[a._v("before_install")])])]),a._v(" "),s("li",[s("p",[s("code",[a._v("install")])])]),a._v(" "),s("li",[s("p",[s("code",[a._v("before_script")])])]),a._v(" "),s("li",[s("p",[s("code",[a._v("script")])])]),a._v(" "),s("li",[s("p",[s("code",[a._v("aftersuccess or afterfailure")])])]),a._v(" "),s("li",[s("p",[s("code",[a._v("[OPTIONAL] before_deploy")])])]),a._v(" "),s("li",[s("p",[s("code",[a._v("[OPTIONAL] deploy")])])]),a._v(" "),s("li",[s("p",[s("code",[a._v("[OPTIONAL] after_deploy")])])]),a._v(" "),s("li",[s("p",[s("code",[a._v("after_script")])])]),a._v(" "),s("li",[s("p",[a._v("下面是一个before_install钩子的例子")])])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("before_install:\n  - "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt-get")]),a._v(" -qq update\n  - "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt-get")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" -y libxml2-dev\n")])])]),s("blockquote",[s("p",[a._v("上面代码表示"),s("code",[a._v("before_install")]),a._v("阶段要做两件事，第一件事是要更新依赖，第二件事是安装"),s("code",[a._v("libxml2-dev")]),a._v("。用到的几个参数的含义如下：-qq表示减少中间步骤的输出，-y表示如果需要用户输入，总是输入yes")])]),a._v(" "),s("h5",{attrs:{id:"_3-6-运行状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-运行状态"}},[a._v("#")]),a._v(" 3.6 运行状态")]),a._v(" "),s("ul",[s("li",[a._v("最后，"),s("code",[a._v("Travis")]),a._v(" 每次运行，可能会返回四种状态\n"),s("ul",[s("li",[s("code",[a._v("passed")]),a._v("：运行成功，所有步骤的退出码都是0")]),a._v(" "),s("li",[s("code",[a._v("canceled")]),a._v("：用户取消执行")]),a._v(" "),s("li",[s("code",[a._v("errored")]),a._v("："),s("code",[a._v("before_install")]),a._v("、"),s("code",[a._v("install")]),a._v("、"),s("code",[a._v("before_script")]),a._v("有非零退出码，运行会立即停止")]),a._v(" "),s("li",[s("code",[a._v("failed")]),a._v(" ："),s("code",[a._v("script")]),a._v("有非零状态码 ，会继续运行")])])])]),a._v(" "),s("h4",{attrs:{id:"四、使用技巧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、使用技巧"}},[a._v("#")]),a._v(" 四、使用技巧")]),a._v(" "),s("h5",{attrs:{id:"_4-1-环境变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-环境变量"}},[a._v("#")]),a._v(" 4.1 环境变量")]),a._v(" "),s("ul",[s("li",[s("code",[a._v(".travis.yml")]),a._v("的env字段可以定义环境变量,然后，脚本内部就使用这些变量了")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("env:\n  - "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("DB")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("postgres\n  - "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("SH")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("bash\n  - "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("PACKAGE_VERSION")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"1.0.*"')]),a._v("\n")])])]),s("blockquote",[s("p",[a._v("有些环境变量（比如用户名和密码）不能公开，这时可以通过 Travis 网站，写在每个仓库的设置页里面，Travis 会自动把它们加入环境变量。这样一来，脚本内部依然可以使用这些环境变量，但是只有管理员才能看到变量的值,"),s("a",{attrs:{href:"https://docs.travis-ci.com/user/environment-variables",target:"_blank",rel:"noopener noreferrer"}},[a._v("具体操作文档"),s("OutboundLink")],1)])]),a._v(" "),s("p",[s("img",{attrs:{src:"http://www.ruanyifeng.com/blogimg/asset/2017/bg2017121903.png",alt:""}})]),a._v(" "),s("h5",{attrs:{id:"_4-2-加密信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-加密信息"}},[a._v("#")]),a._v(" 4.2 加密信息")]),a._v(" "),s("ul",[s("li",[a._v("如果不放心保密信息明文存在 "),s("code",[a._v("Travis")]),a._v(" 的网站，可以使用 "),s("code",[a._v("Travis")]),a._v(" 提供的加密功能")])])])}),[],!1,null,null,null);e.default=v.exports}}]);
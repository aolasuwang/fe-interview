(window.webpackJsonp=window.webpackJsonp||[]).push([[601],{1157:function(e,n,a){"use strict";a.r(n);var s=a(10),t=Object(s.a)({},(function(){var e=this,n=e.$createElement,a=e._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"构建基础篇-1：你需要了解的包管理工具与配置项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构建基础篇-1：你需要了解的包管理工具与配置项"}},[e._v("#")]),e._v(" 构建基础篇 1：你需要了解的包管理工具与配置项")]),e._v(" "),a("p",[e._v("任何一个项目的构建离不开工具和统一的管理标准，在项目开发和维护过程中，我们需要了解安装包的相应工具和配置文件，以此来有效的进行项目的迭代和版本的更新，为项目提供基本的运行环境。本文将详细介绍构建 Vue.js 项目相关的依赖包安装工具和相应的配置文件，为大家提供参考。")]),e._v(" "),a("h2",{attrs:{id:"介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[e._v("#")]),e._v(" 介绍")]),e._v(" "),a("p",[e._v("相信大家对于包管理工具的使用一定不会陌生，毕竟它已经成为前端项目中必不可少的一部分，为了照顾部分零基础用户，这里我们做一个简单的介绍。")]),e._v(" "),a("h3",{attrs:{id:"_1-npm-与-package-json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-npm-与-package-json"}},[e._v("#")]),e._v(" 1. npm 与 package.json")]),e._v(" "),a("p",[e._v("npm 是 Node Package Manager 的简称，顾名思义，它是 node 的包管理工具，也是目前世界上最大的开源库生态系统。官方地址为："),a("a",{attrs:{href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.npmjs.com/"),a("OutboundLink")],1),e._v("，你可以在里面找到数以万计的开源包。")]),e._v(" "),a("p",[e._v("使用 npm 包下载量统计工具，比如 "),a("a",{attrs:{href:"https://npm-stat.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("npm-start"),a("OutboundLink")],1),e._v("，我们可以查看相应包在一定时间范围内的下载量数据，下面是 "),a("code",[e._v("vue-cli")]),e._v(" 和 "),a("code",[e._v("@vue/cli")]),e._v(" 的下载量趋势：")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://poetries1.gitee.io/img-repo/2020/08/vue/7.png",alt:""}})]),e._v(" "),a("p",[e._v("在上篇文章中我们介绍了使用 vue-cli 来构建自己的项目，并生成了相应的目录结构，而在最外层目录中，我们可以看到有 "),a("code",[e._v("package.json")]),e._v(" 这一文件，该文件便是我们需要了解的包管理文件。")]),e._v(" "),a("p",[e._v("我们先来看一下该文件里面的内容：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('{\n    "name": "my-project", \n    "version": "0.1.0", \n    "private": true, \n    "scripts": {\n        "serve": "vue-cli-service serve",\n        "build": "vue-cli-service build",\n        "lint": "vue-cli-service lint"\n    },\n    "dependencies": {\n        "vue": "^2.5.16",\n        "vue-router": "^3.0.1",\n        "vuex": "^3.0.1"\n    },\n    "devDependencies": {\n        "@vue/cli-plugin-babel": "^3.0.0-beta.15",\n        "@vue/cli-service": "^3.0.0-beta.15",\n        "less": "^3.0.4",\n        "less-loader": "^4.1.0",\n        "vue-template-compiler": "^2.5.16"\n    },\n    "browserslist": [\n        "> 1%",\n        "last 2 versions",\n        "not ie <= 8"\n    ]\n}\n\n')])])]),a("p",[e._v("可以看到该文件是由一系列键值对构成的 JSON 对象，每一个键值对都有其相应的作用，比如 scripts 脚本命令的配置，我们在终端启动项目运行的 "),a("code",[e._v("npm run serve")]),e._v(" 命令其实便是执行了 scripts 配置下的 serve 项命令 "),a("code",[e._v("vue-cli-service serve")]),e._v(" ，我们可以在 scripts 下自己修改或添加相应的项目命令。")]),e._v(" "),a("p",[e._v("而 dependencies 和 devDependencies 分别为项目生产环境和开发环境的依赖包配置，也就是说像 "),a("code",[e._v("@vue/cli-service")]),e._v(" 这样只用于项目开发时的包我们可以放在 devDependencies 下，但像 "),a("code",[e._v("vue-router")]),e._v(" 这样结合在项目上线代码中的包应该放在 dependencies 下。")]),e._v(" "),a("p",[e._v("详细的package.json文件配置项介绍可以参考："),a("a",{attrs:{href:"https://docs.npmjs.com/files/package.json",target:"_blank",rel:"noopener noreferrer"}},[e._v("package.json"),a("OutboundLink")],1)]),e._v(" "),a("h3",{attrs:{id:"_2-常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-常用命令"}},[e._v("#")]),e._v(" 2. 常用命令")]),e._v(" "),a("p",[e._v("在简单的了解了 package.json 文件后，我们再来看下包管理工具的常用命令。一般在项目的构建和开发阶段，我们常用的 npm 命令有：")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 生成 package.json 文件（需要手动选择配置）")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" init\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 生成 package.json 文件（使用默认配置）")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" init -y\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 一键安装 package.json 下的依赖包")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" i\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 在项目中安装包名为 xxx 的依赖包（配置在 dependencies 下）")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" i xxx\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 在项目中安装包名为 xxx 的依赖包（配置在 dependencies 下）")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" i xxx --save\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 在项目中安装包名为 xxx 的依赖包（配置在 devDependencies 下）")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" i xxx --save-dev\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 全局安装包名为 xxx 的依赖包")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" i -g xxx\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 运行 package.json 中 scripts 下的命令")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" run xxx\n\n")])])]),a("p",[e._v("比较陌生但实用的有：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# 打开 xxx 包的主页\nnpm home xxx\n\n# 打开 xxx 包的代码仓库\nnpm repo xxx\n\n# 将当前模块发布到 npmjs.com，需要先登录\nnpm publish\n\n")])])]),a("p",[e._v("相比 npm，"),a("a",{attrs:{href:"https://yarnpkg.com/zh-Hans/",target:"_blank",rel:"noopener noreferrer"}},[e._v("yarn"),a("OutboundLink")],1),e._v(" 相信大家也不会陌生，它是由 facebook 推出并开源的包管理工具，具有速度快，安全性高，可靠性强等主要优势，它的常用命令如下：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# 生成 package.json 文件（需要手动选择配置）\nyarn init\n\n# 生成 package.json 文件（使用默认配置）\nyarn init -y\n\n# 一键安装 package.json 下的依赖包\nyarn\n\n# 在项目中安装包名为 xxx 的依赖包（配置在 dependencies 下）,同时 yarn.lock 也会被更新\nyarn add xxx\n\n# 在项目中安装包名为 xxx 的依赖包（配置在配置在 devDependencies 下）,同时 yarn.lock 也会被更新\nyarn add xxx --dev\n\n# 全局安装包名为 xxx 的依\nyarn global add xxx\n\n# 运行 package.json 中 scripts 下的命令\nyarn xxx\n\n")])])]),a("p",[e._v("比较陌生但实用的有：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# 列出 xxx 包的版本信息\nyarn outdated xxx\n\n# 验证当前项目 package.json 里的依赖版本和 yarn 的 lock 文件是否匹配\nyarn check\n\n# 将当前模块发布到 npmjs.com，需要先登录\nyarn publish\n\n")])])]),a("p",[e._v("以上便是 npm 与 yarn 包管理工具的常用及实用命令，需要注意的是，本小册的讲解将会优先使用 yarn 命令进行包的管理和安装。")]),e._v(" "),a("h3",{attrs:{id:"_3-第三方插件配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-第三方插件配置"}},[e._v("#")]),e._v(" 3. 第三方插件配置")]),e._v(" "),a("p",[e._v("在上方的 package.json 文件中我们可以看到有 browserslist 这一配置项，那么该配置项便是这里所说的第三方插件配置，该配置的主要作用是用于在不同的前端工具之间共享目标浏览器和 Node.js 的版本：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('"browserslist": [\n    "> 1%", // 表示包含所有使用率 > 1% 的浏览器\n    "last 2 versions", // 表示包含浏览器最新的两个版本\n    "not ie <= 8" // 表示不包含 ie8 及以下版本\n]\n\n')])])]),a("p",[e._v("比如像 "),a("a",{attrs:{href:"https://www.npmjs.com/package/autoprefixer",target:"_blank",rel:"noopener noreferrer"}},[e._v("autoprefixer"),a("OutboundLink")],1),e._v(" 这样的插件需要把你写的 css 样式适配不同的浏览器，那么这里要针对哪些浏览器呢，就是上面配置中所包含的。")]),e._v(" "),a("p",[e._v("而如果写在 autoprefixer 的配置中，那么会存在一个问题，万一其他第三方插件也需要浏览器的包含范围用于实现其特定的功能，那么就又得在其配置中设置一遍，这样就无法得以共用。所以在 package.json 中配置 browserslist 的属性使得所有工具都会自动找到目标浏览器。")]),e._v(" "),a("p",[e._v("当然，你也可以单独写在 .browserslistrc 的文件中：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# Browsers that we support \n\n> 1%\nlast 2 versions\nnot ie <= 8\n\n")])])]),a("p",[e._v("至于它是如何去衡量浏览器的使用率和版本的，数据都是来源于 "),a("a",{attrs:{href:"https://caniuse.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Can I Use"),a("OutboundLink")],1),e._v("。你也可以访问 "),a("a",{attrs:{href:"http://browserl.ist/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://browserl.ist/"),a("OutboundLink")],1),e._v(" 去搜索配置项所包含的浏览器列表，比如搜索 "),a("code",[e._v("last 2 versions")]),e._v(" 会得到你想要的结果，或者在项目终端运行如下命令查看：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npx browserslist\n\n")])])]),a("p",[e._v("除了上述插件的配置，项目中常用的插件还有：babel、postcss 等，有兴趣的同学可以访问其官网进行了解。")]),e._v(" "),a("h3",{attrs:{id:"_4-vue-cli-包安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-vue-cli-包安装"}},[e._v("#")]),e._v(" 4. vue-cli 包安装")]),e._v(" "),a("p",[e._v("在上述的教程中，我们使用 npm 或 yarn 进行了包的安装和配置，除了以上两种方法，vue-cli 3.x 还提供了其专属的 "),a("code",[e._v("vue add")]),e._v(" 命令，但是需要注意的是该命令安装的包是以 @vue/cli-plugin 或者 vue-cli-plugin 开头，即只能安装 Vue 集成的包。")]),e._v(" "),a("p",[e._v("比如运行：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("vue add jquery\n\n")])])]),a("p",[e._v("其会安装 "),a("code",[e._v("vue-cli-plugin-jquery")]),e._v("，很显然这个插件不存在便会安装失败。又或者你运行：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("vue add @vue/eslint\n\n")])])]),a("p",[e._v("其会解析为完整的包名 "),a("code",[e._v("@vue/cli-plugin-eslint")]),e._v("，因为该包存在所以会安装成功。")]),e._v(" "),a("p",[e._v("同时，不同于 npm 或 yarn 的安装， "),a("code",[e._v("vue add")]),e._v(" 不仅会将包安装到你的项目中，其还会改变项目的代码或文件结构，所以安装前最好提交你的代码至仓库。")]),e._v(" "),a("p",[e._v("另外 vue add 中还有两个特例，如下：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# 安装 vue-router\nvue add router\n\n# 安装 vuex\nvue add vuex\n\n")])])]),a("p",[e._v("这两个命令会直接安装 vue-router 和 vuex 并改变你的代码结构，使你的项目集成这两个配置，并不会去安装添加 vue-cli-plugin 或 @vue/cli-plugin 前缀的包。")]),e._v(" "),a("h2",{attrs:{id:"结语"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结语"}},[e._v("#")]),e._v(" 结语")]),e._v(" "),a("p",[e._v("不积跬步无以至千里，不积小流无以成江海。本文主要介绍了在 Vue 项目构建前期需要了解的包管理工具与配置的知识点，只有了解了基本的工具使用才能熟练的对项目进行按需配置，希望大家在接下来的学习中能够学以致用，付诸实践。")]),e._v(" "),a("h2",{attrs:{id:"思考-作业"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#思考-作业"}},[e._v("#")]),e._v(" 思考 & 作业")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("文章中使用的一些 npm 包名为什么要用 "),a("code",[e._v("@")]),e._v(" 开头？")])]),e._v(" "),a("li",[a("p",[e._v("除了文章中介绍的 "),a("code",[e._v("browserslist")]),e._v(" 这样的配置项可以写在单独的文件中外，还有哪些常用的配置项可以这样操作？又是如何配置的？")])]),e._v(" "),a("li",[a("p",[e._v("Vue CLI 3 还集成了哪些包，可以通过 "),a("code",[e._v("vue add")]),e._v(" 命令安装？")])])])])}),[],!1,null,null,null);n.default=t.exports}}]);
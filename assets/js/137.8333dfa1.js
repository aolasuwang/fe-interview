(window.webpackJsonp=window.webpackJsonp||[]).push([[137],{1374:function(t,a,e){"use strict";e.r(a);var s=e(10),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("blockquote",[e("p",[e("code",[t._v("Performance")]),t._v("是一个做前端性能监控离不开的"),e("code",[t._v("API")]),t._v("，最好在页面完全加载完成之后再使用，因为很多值必须在页面完全加载之后才能得到。最简单的办法是在"),e("code",[t._v("window.onload")]),t._v("事件中读取各种数据。")])]),t._v(" "),e("h2",{attrs:{id:"一、回顾页面加载过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、回顾页面加载过程"}},[t._v("#")]),t._v(" 一、回顾页面加载过程")]),t._v(" "),e("blockquote",[e("p",[t._v("要学习这套"),e("code",[t._v("API")]),t._v("的使用，先简单介绍下前端的基础知识")])]),t._v(" "),e("h3",{attrs:{id:"_1-1-页面加载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-页面加载"}},[t._v("#")]),t._v(" 1.1 页面加载")]),t._v(" "),e("blockquote",[e("p",[t._v("一个页面的请求到响应再到显示出来，需要经过下面一些重要过程，当我们在浏览器输入一个"),e("code",[t._v("URL")]),t._v("或者说点击一个"),e("code",[t._v("URL")]),t._v("开始，会出现如下流程")])]),t._v(" "),e("ul",[e("li",[t._v("页面准备")]),t._v(" "),e("li",[t._v("重定向：在"),e("code",[t._v("header")]),t._v("定义了重定向才会有这个过程，如果没有重定向，不会产生这个过程。")]),t._v(" "),e("li",[e("code",[t._v("app cache")]),t._v("：会先检查这个域名是否有缓存，如果有缓存就不需要DNS解析域名。这里的"),e("code",[t._v("app")]),t._v("是值应用程序"),e("code",[t._v("application")]),t._v("，不指手机"),e("code",[t._v("app")]),t._v("。")]),t._v(" "),e("li",[e("code",[t._v("DNS")]),t._v("解析：把域名解析成"),e("code",[t._v("IP")]),t._v("，如果直接用"),e("code",[t._v("ip")]),t._v("地址访问，不产生这个过程。")]),t._v(" "),e("li",[e("code",[t._v("TCP")]),t._v("连接："),e("code",[t._v("http")]),t._v("协议是经过"),e("code",[t._v("TCP")]),t._v("来传输的，所以产生一个"),e("code",[t._v("http")]),t._v("请求就会有"),e("code",[t._v("TCP connect")]),t._v("，但是依赖于长连接，不会产生这个过程。")]),t._v(" "),e("li",[e("code",[t._v("request header")]),t._v("：请求头信息。")]),t._v(" "),e("li",[e("code",[t._v("request body")]),t._v("：请求体信息，比如"),e("code",[t._v("get")]),t._v("请求是没有请求体信息的，所以没有这个过程，这就是为什么把头跟体分开写的原因。")]),t._v(" "),e("li",[e("code",[t._v("response header")]),t._v("：响应头信息。")]),t._v(" "),e("li",[e("code",[t._v("response body")]),t._v("：响应体信息。")]),t._v(" "),e("li",[t._v("解析"),e("code",[t._v("HTML")]),t._v("结构")]),t._v(" "),e("li",[t._v("加载外部脚本和样式表文件：正常来说"),e("code",[t._v("JS")]),t._v("、"),e("code",[t._v("css")]),t._v("都是外部加载的，当然有不正常的人啊，比如我。")]),t._v(" "),e("li",[t._v("解析并执行脚本代码")]),t._v(" "),e("li",[t._v("构建与解析"),e("code",[t._v("HTML DOM")]),t._v("树：这个过程可以去了解下"),e("code",[t._v("DOM")]),t._v("树是怎样的就明白啦。")]),t._v(" "),e("li",[t._v("加载外部图片")]),t._v(" "),e("li",[t._v("页面加载完成，显示出来啦")])]),t._v(" "),e("h3",{attrs:{id:"_1-2-重定向分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-重定向分析"}},[t._v("#")]),t._v(" 1.2 重定向分析")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("app cach")])]),t._v(" "),e("li",[e("code",[t._v("DNS")]),t._v("解析")]),t._v(" "),e("li",[e("code",[t._v("TCP")]),t._v("连接")]),t._v(" "),e("li",[e("code",[t._v("request header")])]),t._v(" "),e("li",[t._v("重定向")]),t._v(" "),e("li",[e("code",[t._v("app cach")])]),t._v(" "),e("li",[e("code",[t._v("DNS")]),t._v("解析")]),t._v(" "),e("li",[e("code",[t._v("TCP")]),t._v("连接")]),t._v(" "),e("li",[e("code",[t._v("request header")])])]),t._v(" "),e("h2",{attrs:{id:"二、performance"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、performance"}},[t._v("#")]),t._v(" 二、performance")]),t._v(" "),e("h3",{attrs:{id:"_2-1-performance-timing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-performance-timing"}},[t._v("#")]),t._v(" 2.1 performance.timing")]),t._v(" "),e("blockquote",[e("p",[t._v("这个API能帮我们得到整个页面请求的时间，如下图，在"),e("code",[t._v("Chrome")]),t._v("的"),e("code",[t._v("Console")]),t._v("是可以直接运行的")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://img-blog.csdn.net/20170316140524418",alt:""}})]),t._v(" "),e("p",[t._v("先解释下这些时间都是代表什么")]),t._v(" "),e("p",[e("strong",[t._v("timing 对象里边的数据比较多，梳理如下几个关键性的节点")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("fetchStart")]),t._v("：发起获取当前文档的时间点，我的理解是浏览器收到发起页面请求的时间点；")]),t._v(" "),e("li",[e("code",[t._v("domainLookupStart")]),t._v("：返回浏览器开始"),e("code",[t._v("DNS")]),t._v("查询的时间，如果此请求没有"),e("code",[t._v("DNS")]),t._v("查询过程，如长连接、资源"),e("code",[t._v("cache")]),t._v("、甚至是本地资源等，那么就返回"),e("code",[t._v("fetchStart")]),t._v("的值；")]),t._v(" "),e("li",[e("code",[t._v("domainLookupEnd")]),t._v("：返回浏览器结束"),e("code",[t._v("DNS")]),t._v("查询的时间，如果没有"),e("code",[t._v("DNS")]),t._v("查询过程，同上；")]),t._v(" "),e("li",[e("code",[t._v("connectStart")]),t._v("：浏览器向服务器请求文档，开始建立连接的时间，如果此连接是一个长连接，或者无需与服务器连接（命中缓存），则返回"),e("code",[t._v("domainLookupEnd")]),t._v("的值；")]),t._v(" "),e("li",[e("code",[t._v("connectEnd")]),t._v("：浏览器向服务器请求文档，建立连接成功的时间；")]),t._v(" "),e("li",[e("code",[t._v("requestStart")]),t._v("：开始请求文档的时间（注意没有"),e("code",[t._v("requestEnd")]),t._v("）;")]),t._v(" "),e("li",[e("code",[t._v("responseStart")]),t._v("：浏览器开始接收第一个字节数据的时间，数据可能来自于服务器、缓存、或本地资源；")]),t._v(" "),e("li",[e("code",[t._v("unloadEventStart")]),t._v("：卸载上一个文档开始的时间；")]),t._v(" "),e("li",[e("code",[t._v("unloadEventEnd")]),t._v("：卸载上一个文档结束的时间；")]),t._v(" "),e("li",[e("code",[t._v("domLoading")]),t._v("：浏览器把"),e("code",[t._v("document.readyState")]),t._v("设置为"),e("code",[t._v("“loading”")]),t._v("的时间点，开始构建"),e("code",[t._v("dom")]),t._v("树的时间点；")]),t._v(" "),e("li",[e("code",[t._v("responseEnd")]),t._v("：浏览器接收最后一个字节数据的时间，或连接被关闭的时间；")]),t._v(" "),e("li",[e("code",[t._v("domInteractive")]),t._v("：浏览器把"),e("code",[t._v("document.readyState设")]),t._v("置为"),e("code",[t._v("“interactive”")]),t._v("的时间点，"),e("code",[t._v("DOM")]),t._v("树创建结束；")]),t._v(" "),e("li",[e("code",[t._v("domContentLoadedEventStart")]),t._v("：文档发生"),e("code",[t._v("DOMContentLoaded")]),t._v("事件的时间；")]),t._v(" "),e("li",[e("code",[t._v("domContentLoadedEventEnd")]),t._v("：文档的"),e("code",[t._v("DOMContentLoaded")]),t._v("事件结束的时间；")]),t._v(" "),e("li",[e("code",[t._v("domComplete")]),t._v("：浏览器把"),e("code",[t._v("document.readyState")]),t._v("设置为"),e("code",[t._v("“complete”")]),t._v("的时间点；")]),t._v(" "),e("li",[e("code",[t._v("loadEventStart")]),t._v("：文档触发"),e("code",[t._v("load")]),t._v("事件的时间；")]),t._v(" "),e("li",[e("code",[t._v("loadEventEnd")]),t._v("：文档出发"),e("code",[t._v("load")]),t._v("事件结束后的时间")])]),t._v(" "),e("blockquote",[e("p",[t._v("再来一张图，表示各阶段的开始与结束对应的时间")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-images.githubusercontent.com/8554143/33872196-d6c35844-df50-11e7-8bcc-1fdcac66ce64.png",alt:""}})]),t._v(" "),e("blockquote",[e("p",[t._v("从以上的分析，我们就可以得到一些时间的计算")])]),t._v(" "),e("ul",[e("li",[t._v("准备新页面耗时："),e("code",[t._v("fetchStart - navigationStart")])]),t._v(" "),e("li",[t._v("重定向时间："),e("code",[t._v("redirectEnd - redirectStart")])]),t._v(" "),e("li",[e("code",[t._v("App Cache")]),t._v("时间："),e("code",[t._v("domainLookupStart - fetchStart")])]),t._v(" "),e("li",[e("code",[t._v("DNS")]),t._v("解析时间："),e("code",[t._v("domainLookupEnd -domainLookupStart")])]),t._v(" "),e("li",[e("code",[t._v("TCP")]),t._v("连接时间："),e("code",[t._v("connectEnd - connectStart")])]),t._v(" "),e("li",[e("code",[t._v("request")]),t._v("时间："),e("code",[t._v("responseEnd - requestStart")]),t._v("这个计算是代表请求响应加起来的时间")]),t._v(" "),e("li",[t._v("请求完毕到"),e("code",[t._v("DOM")]),t._v("树加载："),e("code",[t._v("domInteractive -responseEnd")])]),t._v(" "),e("li",[t._v("构建与解析"),e("code",[t._v("DOM")]),t._v("树，加载资源时间："),e("code",[t._v("domCompleter -domInteractive")])]),t._v(" "),e("li",[e("code",[t._v("load")]),t._v("时间："),e("code",[t._v("loadEventEnd - loadEventStart")])]),t._v(" "),e("li",[t._v("整个页面加载时间："),e("code",[t._v("loadEventEnd -navigationStart")])]),t._v(" "),e("li",[t._v("白屏时间："),e("code",[t._v("responseStart-navigationStart")])])]),t._v(" "),e("h3",{attrs:{id:"_2-2-performance-getentries"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-performance-getentries"}},[t._v("#")]),t._v(" 2.2 performance.getEntries()")]),t._v(" "),e("blockquote",[e("p",[t._v("这个API能帮我们获得资源的请求时间，包括JS、CSS、图片等")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://img-blog.csdn.net/20170316155201356",alt:""}})]),t._v(" "),e("blockquote",[e("p",[t._v("如上图可以看到这个API请求返回的是一个数组，这个数组包括整个页面所有的资源加载，上图打开了一个其中一个资源，可以看到如下信息")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("entryType")]),t._v("：类型为"),e("code",[t._v("resource")])]),t._v(" "),e("li",[e("code",[t._v("name")]),t._v("：资源的"),e("code",[t._v("url")])]),t._v(" "),e("li",[e("code",[t._v("initiatorType")]),t._v("：资源是"),e("code",[t._v("link")])]),t._v(" "),e("li",[t._v("资源时间："),e("code",[t._v("duration")]),t._v("的值，是"),e("code",[t._v("responseEnd - startTime")]),t._v("得到的")])]),t._v(" "),e("h3",{attrs:{id:"_2-3-performance-memory"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-performance-memory"}},[t._v("#")]),t._v(" 2.3 performance.memory")]),t._v(" "),e("blockquote",[e("p",[t._v("这个API主要是得到浏览器内存情况")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("jsHeapSizeLimit")]),t._v("：内存大小限制")]),t._v(" "),e("li",[e("code",[t._v("totalJSHeapSize")]),t._v("：可使用的内容")]),t._v(" "),e("li",[e("code",[t._v("userdJSHeapSize")]),t._v("：已使用的内容")])]),t._v(" "),e("blockquote",[e("p",[e("code",[t._v("userdJSHeapSize")]),t._v("表示所有被使用的JS堆栈内存，"),e("code",[t._v("totalJSHeapSize")]),t._v("可使用的JS堆栈内存，如果"),e("code",[t._v("userdJSHeapSize")]),t._v("的值大于"),e("code",[t._v("totalJSHeapSize")]),t._v("，就可能出现内存泄漏")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://img-blog.csdn.net/20170316155226893",alt:""}})]),t._v(" "),e("h2",{attrs:{id:"三、动画帧率fps"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、动画帧率fps"}},[t._v("#")]),t._v(" 三、动画帧率FPS")]),t._v(" "),e("h3",{attrs:{id:"_3-1-流畅动画的标准"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-流畅动画的标准"}},[t._v("#")]),t._v(" 3.1 流畅动画的标准")]),t._v(" "),e("blockquote",[e("p",[e("code",[t._v("FPS")]),t._v(" 表示的是每秒钟画面更新次数。我们平时所看到的连续画面都是由一幅幅静止画面组成的，每幅画面称为一帧，"),e("code",[t._v("FPS")]),t._v(" 是描述“帧”变化速度的物理量")])]),t._v(" "),e("ul",[e("li",[t._v("理论上说，"),e("code",[t._v("FPS")]),t._v(" 越高，动画会越流畅，目前大多数设备的屏幕刷新率为 "),e("code",[t._v("60")]),t._v(" 次/秒，所以通常来讲 "),e("code",[t._v("FPS")]),t._v(" 为 "),e("code",[t._v("60 frame/s")]),t._v(" 时动画效果最好，也就是每帧的消耗时间为 "),e("code",[t._v("16.6")]),t._v("7ms")])]),t._v(" "),e("p",[e("strong",[t._v("不同帧率的体验")])]),t._v(" "),e("ul",[e("li",[t._v("帧率能够达到 "),e("code",[t._v("50 ～ 60 FPS")]),t._v(" 的动画将会相当流畅，让人倍感舒适；")]),t._v(" "),e("li",[t._v("帧率在 "),e("code",[t._v("30 ～ 50 FPS")]),t._v(" 之间的动画，因各人敏感程度不同，舒适度因人而异；")]),t._v(" "),e("li",[t._v("帧率在 "),e("code",[t._v("30 FPS")]),t._v(" 以下的动画，让人感觉到明显的卡顿和不适感；")]),t._v(" "),e("li",[t._v("帧率波动很大的动画，亦会使人感觉到卡顿")])]),t._v(" "),e("h3",{attrs:{id:"_3-2-获取我们页面动画当前的-fps-值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-获取我们页面动画当前的-fps-值"}},[t._v("#")]),t._v(" 3.2 获取我们页面动画当前的 FPS 值")]),t._v(" "),e("blockquote",[e("p",[t._v("那么我们该如何准确的获取我们页面动画当前的 FPS 值呢？")])]),t._v(" "),e("h4",{attrs:{id:"_3-2-1-方法一-借助-chrome-开发者工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-方法一-借助-chrome-开发者工具"}},[t._v("#")]),t._v(" 3.2.1 方法一 借助 Chrome 开发者工具")]),t._v(" "),e("blockquote",[e("p",[e("code",[t._v("Chrome")]),t._v(" 提供给开发者的功能十分强大，在开发者工具中，我们进行如下选择调出 "),e("code",[t._v("FPS meter")]),t._v(" 选项：")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-images.githubusercontent.com/8554143/33823997-e25d42dc-de97-11e7-92e3-8521ede019df.png",alt:""}})]),t._v(" "),e("blockquote",[e("p",[t._v("通过这个按钮，可以开启页面实时 "),e("code",[t._v("Frame Rate")]),t._v(" (帧率) 观测及页面 "),e("code",[t._v("GPU")]),t._v(" 使用率")])]),t._v(" "),e("p",[e("strong",[t._v("但是这个方法缺点太多了")])]),t._v(" "),e("ul",[e("li",[t._v("这个只能一次观测一到几个页面，而且需要人工实时观测")]),t._v(" "),e("li",[t._v("数据只能是主观感受，并没有一个十分精确的数据不断上报或者被收集")]),t._v(" "),e("li",[t._v("因此，我们需要更加智能的方法。")])]),t._v(" "),e("h4",{attrs:{id:"_3-2-2-方法二-借助-frame-timing-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2-方法二-借助-frame-timing-api"}},[t._v("#")]),t._v(" 3.2.2 方法二 借助 Frame Timing API")]),t._v(" "),e("blockquote",[e("p",[t._v("Blink 内核早期架构")])]),t._v(" "),e("ul",[e("li",[t._v("以 "),e("code",[t._v("Chrome")]),t._v(" 浏览器内核 "),e("code",[t._v("Blink")]),t._v(" 渲染页面为例。对早期的 "),e("code",[t._v("Chrome")]),t._v(" 浏览器而言，每个页面 "),e("code",[t._v("Tab")]),t._v(" 对应一个独立的 "),e("code",[t._v("renderer")]),t._v(" 进程，"),e("code",[t._v("Renderer")]),t._v("进程中包含了主线程和合成线程。早期 "),e("code",[t._v("Chrome")]),t._v(" 内核架构")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-images.githubusercontent.com/8554143/33830985-4ab23108-deb1-11e7-89ed-6b9f60dcb2fd.jpg",alt:""}})]),t._v(" "),e("p",[e("strong",[t._v("其中，主线程主要负责")]),t._v("：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("Javascript")]),t._v(" 的计算与执行")]),t._v(" "),e("li",[e("code",[t._v("CSS")]),t._v(" 样式计算")]),t._v(" "),e("li",[e("code",[t._v("Layout")]),t._v(" 计算")]),t._v(" "),e("li",[t._v("将页面元素绘制成位图（"),e("code",[t._v("paint")]),t._v("），也就是光栅化（"),e("code",[t._v("Raster")]),t._v("）")]),t._v(" "),e("li",[t._v("将位图给合成线程")])]),t._v(" "),e("p",[e("strong",[t._v("合成线程则主要负责")]),t._v("：")]),t._v(" "),e("ul",[e("li",[t._v("将位图("),e("code",[t._v("GraphicsLayer")]),t._v(" 层)以纹理("),e("code",[t._v("texture")]),t._v(")的形式上传给 "),e("code",[t._v("GPU")])]),t._v(" "),e("li",[t._v("计算页面的可见部分和即将可见部分（滚动）")]),t._v(" "),e("li",[e("code",[t._v("CSS")]),t._v(" 动画处理")]),t._v(" "),e("li",[t._v("通知 GPU 绘制位图到屏幕上")])]),t._v(" "),e("blockquote",[e("p",[t._v("其实知道了这两个线程之后，下一个概念是厘清 "),e("code",[t._v("CSS")]),t._v(" 动画与 "),e("code",[t._v("JS")]),t._v(" 动画的细微区别（当然它们都是 Web 动画）")])]),t._v(" "),e("p",[e("strong",[t._v("JS 动画与 CSS 动画的细微区别")])]),t._v(" "),e("ul",[e("li",[t._v("对于 "),e("code",[t._v("JS")]),t._v("动画而言，它们运行时的帧率即是主线程和合成线程加起来消耗的时间。对于流畅动画而言，我们希望它们每一帧的耗时保持在 "),e("code",[t._v("16.67ms")]),t._v(" 之内;")]),t._v(" "),e("li",[t._v("而对于 "),e("code",[t._v("CSS")]),t._v(" 动画而言，由于其流程不受主线程的影响，所以希望能得到合成线程的消耗的时间，而合成线程的绘制频率也反映了滚动和 CSS 动画的流程性。")])]),t._v(" "),e("blockquote",[e("p",[t._v("上面主要想得出的一个结论是。如果我们能够知道主线程和合成线程每一帧消耗的时间，那么我们就能大致得出对应的 Web 动画的帧率。那么上面说到的 "),e("code",[t._v("Frame Timing API")]),t._v(" 是否可以帮助我们拿到这个时间点呢")])]),t._v(" "),e("p",[e("strong",[t._v("什么是 Frame Timing API ？")])]),t._v(" "),e("blockquote",[e("p",[e("code",[t._v("Frame Timing API")]),t._v(" 是 "),e("code",[t._v("Web Performance Timing API")]),t._v(" 标准中的其中一位成员。"),e("code",[t._v("Web Performance Timing API")]),t._v(" 是 W3C 推出的一套性能 API 标准，用于帮助开发者对网站各方面的性能进行精确的分析与控制，提升 Web 网站性能")])]),t._v(" "),e("p",[t._v("它包含许多子类 API，完成不同的功能，大致如下")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-images.githubusercontent.com/8554143/33871575-0799a66a-df4e-11e7-85fd-9b40d43161da.png",alt:""}})]),t._v(" "),e("p",[t._v("怎么使用呢？以 "),e("code",[t._v("Navigation Timing")]),t._v(", "),e("code",[t._v("Performance Timeline")]),t._v(", "),e("code",[t._v("Resource Timing")]),t._v(" 为例子，对于兼容它的浏览器，它以只读属性的形式对外暴露挂载在 "),e("code",[t._v("window.performance")]),t._v(" 上。")]),t._v(" "),e("p",[t._v("我们再来回顾这张图")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-images.githubusercontent.com/8554143/33872196-d6c35844-df50-11e7-8bcc-1fdcac66ce64.png",alt:""}})]),t._v(" "),e("blockquote",[e("p",[t._v("通过这张图以及上面的 "),e("code",[t._v("window.performance.timing")]),t._v("，我们就可以轻松的统计出页面每个重要节点的耗时，这就是 "),e("code",[t._v("Web Performance Timing API")]),t._v(" 的强大之处，感兴趣的可以详细去研究研究，使用在页面统计上")])]),t._v(" "),e("p",[e("strong",[t._v("Frame Timing API 示意")])]),t._v(" "),e("blockquote",[e("p",[t._v("终于可以回归正题，借助 "),e("code",[t._v("Web Performance Timing API")]),t._v(" 中的"),e("code",[t._v("Frame Timing API")]),t._v("，可以轻松的拿到每一帧中，主线程以及合成线程的时间。或者更加容易，直接拿到每一帧的耗时")])]),t._v(" "),e("p",[t._v("获取 "),e("code",[t._v("Render")]),t._v(" 主线程和合成线程的记录，每条记录包含的信息基本如下")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('var rendererEvents = window.performance.getEntriesByType("renderer");\nvar compositeThreadEvents = window.performance.getEntriesByType("composite");\n')])])]),e("p",[t._v("或者是：")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("ar observer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PerformanceObserver")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("list")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" perfEntries "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" list"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getEntries")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" perfEntries"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"frame: "')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" perfEntries"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// subscribe to Frame Timing")]),t._v("\nobserver"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("observe")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("entryTypes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'frame'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("每条记录包含的信息基本如下：")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  sourceFrameNumber"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("120")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  startTime"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1342.549374253")]),t._v("\n  cpuTime"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6.454313323")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("blockquote",[e("p",[t._v("每个记录都包括唯一的 "),e("code",[t._v("Frame Number")]),t._v("、"),e("code",[t._v("Frame")]),t._v(" 开始时间以及 "),e("code",[t._v("cpuTime")]),t._v(" 时间。通过计算每一条记录的 "),e("code",[t._v("startTime")]),t._v(" ，我们就可以算出每两帧间的间隔，从而得到动画的帧率是否能够达到 "),e("code",[t._v("60 FPS")])])]),t._v(" "),e("p",[e("strong",[t._v("看看 Web Performance Timing API 整体的兼容性")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-images.githubusercontent.com/8554143/33873788-4ad802e2-df57-11e7-9174-13913bcaa9b5.png",alt:""}})]),t._v(" "),e("blockquote",[e("p",[e("code",[t._v("Frame Timing API")]),t._v(" 虽好，但是，现在 "),e("code",[t._v("Frame Timing API")]),t._v(" 的兼容性不算很友好，额，不友好到什么程度呢。还没有任何浏览器支持，处于实验性阶段，属于面向未来编程")])]),t._v(" "),e("h4",{attrs:{id:"_3-2-3-方法三-借助-requestanimationframe-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-3-方法三-借助-requestanimationframe-api"}},[t._v("#")]),t._v(" 3.2.3 方法三 借助 requestAnimationFrame API")]),t._v(" "),e("blockquote",[e("p",[t._v("从上面的介绍，我们得知，如果我们可以到得到每一帧中的固定一个时间点，那么两者相减，也能够近似得到一帧所消耗的时间")])]),t._v(" "),e("p",[t._v("这次，我们借助兼容性不错的 "),e("code",[t._v("requestAnimationFrame API")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 语法\nwindow.requestAnimationFrame(callback);\n")])])]),e("ul",[e("li",[e("code",[t._v("requestAnimationFrame")]),t._v(" 大家应该都不陌生，方法告诉浏览器您希望执行动画并请求浏览器调用指定的函数在下一次重绘之前更新动画。")]),t._v(" "),e("li",[t._v("当你准备好更新屏幕画面时你就应用此方法。这会要求你的动画函数在浏览器下次重绘前执行。回调的次数常是每秒 "),e("code",[t._v("60")]),t._v(" 次，大多数浏览器通常匹配 "),e("code",[t._v("W3C")]),t._v(" 所建议的刷新率")])]),t._v(" "),e("p",[e("strong",[t._v("使用 requestAnimationFrame 计算 FPS 原理")])]),t._v(" "),e("blockquote",[e("p",[t._v("原理是，正常而言 "),e("code",[t._v("requestAnimationFrame")]),t._v(" 这个方法在一秒内会执行 "),e("code",[t._v("60")]),t._v(" 次，也就是不掉帧的情况下。假设动画在时间 "),e("code",[t._v("A")]),t._v(" 开始执行，在时间 "),e("code",[t._v("B")]),t._v(" 结束，耗时 "),e("code",[t._v("x ms")]),t._v("。而中间 "),e("code",[t._v("requestAnimationFrame")]),t._v(" 一共执行了 "),e("code",[t._v("n")]),t._v(" 次，则此段动画的帧率大致为："),e("code",[t._v("n / (B - A)")])])]),t._v(" "),e("p",[t._v("核心代码如下，能近似计算每秒页面帧率，以及我们额外记录一个 "),e("code",[t._v("allFrameCount")]),t._v("，用于记录 "),e("code",[t._v("rAF")]),t._v(" 的执行次数，用于计算每次动画的帧率 ：")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("rAF")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        window"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("requestAnimationFrame "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n        window"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("webkitRequestAnimationFrame "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("callback")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            window"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callback"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" frame "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" allFrameCount "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" lastTime "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Date"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" lastFameTime "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Date"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("loop")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" now "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Date"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" fs "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("now "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" lastFameTime"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" fps "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("round")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" fs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n    lastFameTime "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" now"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不置 0，在动画的开头及结尾记录此值的差值算出 FPS")]),t._v("\n    allFrameCount"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    frame"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("now "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" lastTime"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" fps "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("round")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("frame "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("now "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" lastTime"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v(" 1S内 FPS：")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fps"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        frame "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        lastTime "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" now"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("rAF")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("loop"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("loop")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("寻找一个有动画不断运行的页面进行测试，可以看到代码运行如下：")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-images.githubusercontent.com/8554143/33877304-eae6fddc-df62-11e7-8d5f-8674dba3d1f9.png",alt:""}})]),t._v(" "),e("ul",[e("li",[t._v("使用了我之前制作的一个页面进行了测试，使用"),e("code",[t._v("Chrome")]),t._v(" 同时调出页面的 "),e("code",[t._v("FPS meter")]),t._v("，对比两边的实时 "),e("code",[t._v("FPS")]),t._v(" 值，基本吻合。")]),t._v(" "),e("li",[t._v("测试页面，"),e("code",[t._v("Solar System")]),t._v("。你可以将上面的代码贴到这个页面的 "),e("code",[t._v("console")]),t._v(" 中，测试一下数据")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-images.githubusercontent.com/8554143/33877626-ed17f3c6-df63-11e7-8bae-40b9512c2645.gif",alt:""}})]),t._v(" "),e("ul",[e("li",[t._v("对比右上角的 "),e("code",[t._v("Frame Rate")]),t._v("，帧率基本一致。在大部分情况下，这种方法可以很好的得出 Web 动画的帧率。")]),t._v(" "),e("li",[t._v("如果我们需要统计某个特定动画过程的帧率，只需要在动画开始和结尾两处分别记录 "),e("code",[t._v("allFrameCount")]),t._v(" 这个数值大小，再除以中间消耗的时间，也可以得出特定动画过程的 "),e("code",[t._v("FPS")]),t._v(" 值。")]),t._v(" "),e("li",[t._v("值得注意的是，这个方法计算的结果和真实的帧率肯定是存在误差的，因为它是将每两次主线程执行 "),e("code",[t._v("javascript")]),t._v(" 的时间间隔当成一帧，而非上面说的主线程加合成线程所消耗的时间为一帧。但是对于现阶段而言，算是一种可取的方法")])])])}),[],!1,null,null,null);a.default=n.exports}}]);
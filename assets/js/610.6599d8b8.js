(window.webpackJsonp=window.webpackJsonp||[]).push([[610],{1131:function(e,t,n){"use strict";n.r(t);var a=n(10),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"开发拓展篇-2：将-ui-界面交给第三方库"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#开发拓展篇-2：将-ui-界面交给第三方库"}},[e._v("#")]),e._v(" 开发拓展篇 2：将 UI 界面交给第三方库")]),e._v(" "),n("p",[e._v("当你了解了 Vue 项目构建和开发的基本知识后，我认为接下来你一定想亲自在构建出的项目中填充自己的业务和功能逻辑，因为目前其还是空白的。")]),e._v(" "),n("p",[e._v("但是这里我不会教你如何实现一个具体的业务和功能模块，因为每个人想要实现的东西都可能不尽相同。如果你想快速开发一款应用，并且不想过多的操心页面 "),n("code",[e._v("UI")]),e._v(" 层次的内容，比如你不想去实现一个下拉 UI 组件或设计一个 "),n("code",[e._v("icon")]),e._v(" 图标，那么我想你有必要了解下 UI 库及图标库的应用。")]),e._v(" "),n("h2",{attrs:{id:"ui-库"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ui-库"}},[e._v("#")]),e._v(" UI 库")]),e._v(" "),n("p",[e._v("UI 库是脱离 JS 框架外的一种 “工具”，相比 JS 框架可以帮助你实现各种业务逻辑，其更关注于页面 UI 层面的实现，比如提供和业务无关的弹窗、导航、表单组件等，为项目 UI 层面的功能提供解决方案，比如 "),n("a",{attrs:{href:"https://jqueryui.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("jQuery UI"),n("OutboundLink")],1),e._v("。")]),e._v(" "),n("p",[e._v("而由于本小册介绍的 JS 框架是 Vue，所以在 Vue 项目中我们需要使用基于 Vue 开发的 UI 库。本文将以比较流行的 "),n("a",{attrs:{href:"https://doc.vux.li/zh-CN/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vux"),n("OutboundLink")],1),e._v(" 为例，其目前 github star 数已在 14 k 左右。")]),e._v(" "),n("blockquote",[n("p",[e._v("Vux 是一款是基于 "),n("a",{attrs:{href:"https://weui.io",target:"_blank",rel:"noopener noreferrer"}},[e._v("WeUI"),n("OutboundLink")],1),e._v(" 和 "),n("code",[e._v("Vue(2.x)")]),e._v(" 开发的移动端 UI 组件库，主要服务于微信页面。")])]),e._v(" "),n("h3",{attrs:{id:"vux-的安装和配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vux-的安装和配置"}},[e._v("#")]),e._v(" Vux 的安装和配置")]),e._v(" "),n("p",[e._v("那么我们如何在项目中使用 Vux 呢？首先我们先要进行安装：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("yarn add vux \n\n# 或者\nnpm install vux --save\n\n")])])]),n("p",[e._v("同时我们还需要安装 "),n("a",{attrs:{href:"https://doc.vux.li/zh-CN/vux-loader/about.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("vux-loader"),n("OutboundLink")],1),e._v("：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("yarn add vux-loader --dev\n\n# 或者\nnpm install vux-loader --save-dev\n\n")])])]),n("p",[e._v("安装完成后，我们需要在项目中进行配置，而由于目前 Vux 官网的配置教程未对 Vue CLI 3.x 作出说明，我们先来看下其目前的介绍：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("/* build/webpack.base.conf.js */\nconst vuxLoader = require('vux-loader')\nconst webpackConfig = originalConfig // 原来的 module.exports 代码赋值给变量 webpackConfig\n\nmodule.exports = vuxLoader.merge(webpackConfig, {\n    plugins: ['vux-ui']\n})\n\n")])])]),n("p",[e._v("官方目前的配置是在 Vue CLI 2.x 的 "),n("code",[e._v("build/webpack.base.conf.js")]),e._v(" 文件中进行修改，merge "),n("code",[e._v("vux-loader")]),e._v(" 的配置项。那么在 Vue CLI 3.x 中其实原理是一样的，不一样的地方在于我们无法直接修改 webpack 配置文件，而需要通过 vue.config.js 中的 "),n("code",[e._v("configureWebpack")]),e._v(" 配置项来进行修改罢了。代码如下：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("/* vue.config.js */\nconst vuxLoader = require('vux-loader')\n\nmodule.exports = {\n    ...\n    \n    configureWebpack: config => {\n        vuxLoader.merge(config, {\n            plugins: ['vux-ui']\n        })\n    },\n    \n    ...\n}\n\n")])])]),n("p",[e._v("configureWebpack 配置中提供的 "),n("code",[e._v("config")]),e._v(" 参数便是 webpack 的配置内容，也可以看作是官方文档中提到的原来在 "),n("code",[e._v("webpack.base.conf.js")]),e._v(" 中的 "),n("code",[e._v("module.exports")]),e._v(" 代码。")]),e._v(" "),n("h3",{attrs:{id:"vux-的使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vux-的使用"}},[e._v("#")]),e._v(" Vux 的使用")]),e._v(" "),n("p",[e._v("当我们配置好 Vux 后，我们便可以在项目中使用了。Vux 为我们提供了很多项目中常用的组件和工具函数等，比如我们在全局父组件 App.vue 中添加一个底部导航：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('\x3c!-- App.vue --\x3e\n\n<template>\n    <div id="app">\n        <router-view/>\n        <tabbar>\n            <tabbar-item :link="{name: \'demo\'}">\n                <span slot="label">Demo</span>\n            </tabbar-item>\n            <tabbar-item :link="{name: \'laboratory\'}">\n                <span slot="label">实验室</span>\n            </tabbar-item>\n            <tabbar-item :link="{name: \'about\'}">\n                <span slot="label">关于</span>\n            </tabbar-item>\n        </tabbar>\t\n    </div>\n</template>\n\n<script>\nimport { Tabbar, TabbarItem } from \'vux\'\n\nexport default {\n    components: {\n        Tabbar,\n        TabbarItem,\n    }\n}\n<\/script>\n\n<style lang="less">\n@import \'~vux/src/styles/reset.less\';\n</style>\n\n')])])]),n("p",[e._v("我们通过引入组件的方式将导航组 "),n("code",[e._v("Tabbar")]),e._v("、"),n("code",[e._v("TabbarItem")]),e._v(" 件引入并注册到页面中，这样通过 Vux 文档中的介绍我们便可以对相应组件进行配置。呈现效果如下：")]),e._v(" "),n("p",[n("img",{attrs:{src:"https://poetries1.gitee.io/img-repo/2020/08/vue/37.png",alt:""}})]),e._v(" "),n("p",[e._v("需要注意的是我们需要在 App.vue 中引入 Vux 的 "),n("code",[e._v("reset")]),e._v(" 样式 less 文件以解决样式呈现不统一的问题。关于其他 Vux 组件的配置可以参考官方文档："),n("a",{attrs:{href:"https://doc.vux.li/zh-CN/components/actionsheet.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("组件"),n("OutboundLink")],1)]),e._v(" "),n("h3",{attrs:{id:"其他-ui-库（框架）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#其他-ui-库（框架）"}},[e._v("#")]),e._v(" 其他 UI 库（框架）")]),e._v(" "),n("p",[e._v("除了上方介绍的 Vux 外，类似的 Vue 的第三方 UI 库还有很多，这里我列举几个比较常用的：")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://www.iviewui.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("iview"),n("OutboundLink")],1),e._v("：一套基于 Vue.js 的高质量 UI 组件库（PC端）")]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/iview/iview-admin",target:"_blank",rel:"noopener noreferrer"}},[e._v("iView Admin"),n("OutboundLink")],1),e._v("：搭配使用iView UI组件库形成的一套后台集成解决方案（PC端）")]),e._v(" "),n("li",[n("a",{attrs:{href:"http://element-cn.eleme.io/#/zh-CN",target:"_blank",rel:"noopener noreferrer"}},[e._v("Element"),n("OutboundLink")],1),e._v("：一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库（PC端）")]),e._v(" "),n("li",[n("a",{attrs:{href:"http://okoala.github.io/vue-antd/#!/docs/introduce",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue Antd"),n("OutboundLink")],1),e._v("：Ant Design 的 Vue 实现，开发和服务于企业级后台产品（PC端）")]),e._v(" "),n("li",[n("a",{attrs:{href:"http://yuche.github.io/vue-strap/",target:"_blank",rel:"noopener noreferrer"}},[e._v("VueStrap"),n("OutboundLink")],1),e._v("：一款 Bootstrap 风格的 Vue UI 库（PC端）")]),e._v(" "),n("li",[n("a",{attrs:{href:"http://mint-ui.github.io/#!/zh-cn",target:"_blank",rel:"noopener noreferrer"}},[e._v("Mint UI"),n("OutboundLink")],1),e._v("：由饿了么前端开发的基于 Vue.js 的移动端组件库（移动端）")]),e._v(" "),n("li",[n("a",{attrs:{href:"https://wangdahoo.github.io/vonic-documents/#/?id=vonic",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vonic"),n("OutboundLink")],1),e._v("：一个基于 vue.js 和 ionic 样式的 UI 框架，用于快速构建移动端单页应用（移动端）")]),e._v(" "),n("li",[n("a",{attrs:{href:"https://youzan.github.io/vant/#/zh-CN/intro",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vant"),n("OutboundLink")],1),e._v("：轻量、可靠的移动端 Vue 组件库（移动端）")]),e._v(" "),n("li",[n("a",{attrs:{href:"https://didi.github.io/cube-ui/#/zh-CN/docs/introduction",target:"_blank",rel:"noopener noreferrer"}},[e._v("Cube UI"),n("OutboundLink")],1),e._v("：基于 Vue.js 实现的精致移动端组件库（移动端）")])]),e._v(" "),n("h2",{attrs:{id:"图标库"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#图标库"}},[e._v("#")]),e._v(" 图标库")]),e._v(" "),n("p",[e._v("了解完 UI 库，我们再来了解下图标库。图标库，顾名思义就是汇聚了大量图标的仓库，在这样的仓库中我们可以查找并下载我们想要的图标，甚至还可以制定颜色和大小。")]),e._v(" "),n("p",[e._v("在项目中使用图标库可以为我们的项目制定统一的图标管理标准，同时一定程度上也可以减少项目图片的数量。下面我们便来介绍下目前最流行的一款图标库 "),n("a",{attrs:{href:"http://www.iconfont.cn",target:"_blank",rel:"noopener noreferrer"}},[e._v("Iconfont"),n("OutboundLink")],1),e._v("。")]),e._v(" "),n("h3",{attrs:{id:"使用-iconfont-下载管理图标"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-iconfont-下载管理图标"}},[e._v("#")]),e._v(" 使用 Iconfont 下载管理图标")]),e._v(" "),n("blockquote",[n("p",[n("code",[e._v("Iconfont")]),e._v(" 是阿里妈妈 "),n("code",[e._v("MUX")]),e._v(" 倾力打造的矢量图标管理、交流平台。 设计师将图标上传到 Iconfont 平台，用户可以自定义下载多种格式的 icon，平台也可将图标转换为字体，便于前端工程师自由调整与调用。")])]),e._v(" "),n("p",[n("img",{attrs:{src:"https://poetries1.gitee.io/img-repo/2020/08/vue/38.png",alt:""}})]),e._v(" "),n("p",[e._v("在 Iconfont 首页，我们可以点击图标库来进行图标的搜索。这里我们可以点击官方图标库后选择 Ant Design 官方图标库进入。")]),e._v(" "),n("p",[n("img",{attrs:{src:"https://poetries1.gitee.io/img-repo/2020/08/vue/39.png",alt:""}})]),e._v(" "),n("p",[e._v("进入对应的图标库后，我们可以选择对应的图标加入购物车，同时购物车会更新添加后的图标数量。")]),e._v(" "),n("p",[n("img",{attrs:{src:"https://poetries1.gitee.io/img-repo/2020/08/vue/40.png",alt:""}})]),e._v(" "),n("p",[e._v("选择完成后，为了使图标便于今后管理，我们可以新建一个项目并将图标移入项目中。在项目中，我们便可以进行图标的添加、删除和下载等操作（需要登录）。")]),e._v(" "),n("p",[n("img",{attrs:{src:"https://poetries1.gitee.io/img-repo/2020/08/vue/41.png",alt:""}})]),e._v(" "),n("p",[e._v("这里我们采用将图标下载到本地的方式进行使用，当然你也可以使用在线链接，但这会受到网络的影响。")]),e._v(" "),n("h3",{attrs:{id:"iconfont-的使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#iconfont-的使用"}},[e._v("#")]),e._v(" Iconfont 的使用")]),e._v(" "),n("p",[e._v("下载到本地后，我们需要将文件夹中的 "),n("code",[e._v("iconfont.css")]),e._v("、"),n("code",[e._v("iconfont.eot")]),e._v("、"),n("code",[e._v("iconfont.svg")]),e._v("、"),n("code",[e._v("iconfont.ttf")]),e._v(" 和 "),n("code",[e._v("iconfont.woff")]),e._v(" 文件统一放到项目中去，比如我们可以放入新建的 assets 文件夹的 iconfont 中去。而 iconfont.css 便是管理这样图标字体的样式文件，我们可以将其引入到入口文件中：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("/* main.js */\n\nimport './assets/iconfont/iconfont.css'\n\n")])])]),n("p",[e._v("引入后我们便可以在项目中通过给 html 标签添加样式名称的方式来进行图标的使用，比如我们在上方 Vux 的导航上添加图标：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('\x3c!-- App.vue --\x3e\n\n<template>\n    <div id="app">\n    \t<router-view/>\n        <tabbar>\n            <tabbar-item :link="{name: \'demo\'}">\n                <span slot="icon" class="iconfont icon-bulb"></span>\n                <span slot="label">Demo</span>\n            </tabbar-item>\n            <tabbar-item>\n                <span slot="icon" class="iconfont icon-experiment"></span>\n                <span slot="label">实验室</span>\n            </tabbar-item>\n            <tabbar-item>\n                <span slot="icon" class="iconfont icon-deploymentunit"></span>\n                <span slot="label">关于</span>\n            </tabbar-item>\n        </tabbar>\t\n    </div>\n</template>\n\n')])])]),n("p",[e._v("按照 Vux 导航文档添加名称为 "),n("code",[e._v("icon")]),e._v(" 的 "),n("code",[e._v("solt")]),e._v(" 插槽后，我们还需要在标签上添加对应图标的 class 名称，比如 "),n("code",[e._v("iconfont icon-bulb")]),e._v("，最终我们的展示效果如图所示：")]),e._v(" "),n("p",[n("img",{attrs:{src:"https://poetries1.gitee.io/img-repo/2020/08/vue/42.png",alt:""}})]),e._v(" "),n("h3",{attrs:{id:"其他图标库"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#其他图标库"}},[e._v("#")]),e._v(" 其他图标库")]),e._v(" "),n("p",[e._v("除了 Iconfont，常用的图标库还有：")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://fontawesome.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("Font Awesome"),n("OutboundLink")],1),e._v("：世界上最受欢迎且最易于使用的图标集")]),e._v(" "),n("li",[n("a",{attrs:{href:"https://ionicons.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Ionicons"),n("OutboundLink")],1),e._v(" ：精美的开源图标库，可以用于Web，iOS，Android和桌面应用程序")]),e._v(" "),n("li",[n("a",{attrs:{href:"https://themify.me/themify-icons",target:"_blank",rel:"noopener noreferrer"}},[e._v("Themify"),n("OutboundLink")],1),e._v("：一套用于网页设计和应用程序的完整图标")])]),e._v(" "),n("p",[e._v("相信以上这些图标库就足以使你应付所有项目了。")]),e._v(" "),n("h2",{attrs:{id:"结语"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#结语"}},[e._v("#")]),e._v(" 结语")]),e._v(" "),n("p",[e._v("本文介绍了 Vue 项目开发中可能会使用到的 UI 库与图标库的应用，以 Vux 和 Iconfont 为例讲解了它们在项目中的使用方法和注意事项，相信大家能够在项目构建和开发的基础上使用 UI 库与图标库快速实现自己的项目 UI 层面的功能和展示，为自己的项目添砖加瓦。")]),e._v(" "),n("p",[e._v("具体实例代码可以参考："),n("a",{attrs:{href:"https://github.com/luozhihao/vue-project-code/tree/master/ui-framework-project",target:"_blank",rel:"noopener noreferrer"}},[e._v("ui-framework-project"),n("OutboundLink")],1)]),e._v(" "),n("h2",{attrs:{id:"思考-作业"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#思考-作业"}},[e._v("#")]),e._v(" 思考 & 作业")]),e._v(" "),n("ul",[n("li",[e._v("查看 Vux 源码，尝试自己编写一个 UI 插件")]),e._v(" "),n("li",[e._v("Iconfont 是矢量图标库，其相比位图的主要区别是什么？")])])])}),[],!1,null,null,null);t.default=r.exports}}]);
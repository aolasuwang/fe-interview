(window.webpackJsonp=window.webpackJsonp||[]).push([[313],{862:function(e,v,_){"use strict";_.r(v);var o=_(10),t=Object(o.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h2",{attrs:{id:"一、react-fiber是什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一、react-fiber是什么"}},[e._v("#")]),e._v(" 一、React Fiber是什么")]),e._v(" "),_("blockquote",[_("p",[_("code",[e._v("React Fiber")]),e._v("是对核心算法的一次重新实现。"),_("code",[e._v("React Fiber")]),e._v("把更新过程碎片化，把一个耗时长的任务分成很多小片，每一个小片的运行时间很短，虽然总时间依然很长，但是在每个小片执行完之后，都给其他任务一个执行的机会，这样唯一的线程就不会被独占，其他任务依然有运行的机会")])]),e._v(" "),_("ol",[_("li",[e._v("在"),_("code",[e._v("React Fiber")]),e._v("中，一次更新过程会分成多个分片完成，所以完全有可能一个更新任务还没有完成，就被另一个更高优先级的更新过程打断，这时候，优先级高的更新任务会优先处理完，而低优先级更新任务所做的工作则会完全作废，然后等待机会重头再来")]),e._v(" "),_("li",[e._v("因为一个更新过程可能被打断，所以"),_("code",[e._v("React Fiber")]),e._v("一个更新过程被分为两个阶段("),_("code",[e._v("Phase")]),e._v(")：第一个阶段"),_("code",[e._v("Reconciliation Phase")]),e._v("和第二阶段"),_("code",[e._v("Commit Phase")])]),e._v(" "),_("li",[e._v("在第一阶段"),_("code",[e._v("Reconciliation Phase")]),e._v("，"),_("code",[e._v("React Fiber")]),e._v("会找出需要更新哪些"),_("code",[e._v("DOM")]),e._v("，这个阶段是可以被打断的；但是到了第二阶段"),_("code",[e._v("Commit Phase")]),e._v("，那就一鼓作气把"),_("code",[e._v("DOM")]),e._v("更新完，绝不会被打断")]),e._v(" "),_("li",[e._v("这两个阶段大部分工作都是"),_("code",[e._v("React Fiber")]),e._v("做，和我们相关的也就是生命周期函数")])]),e._v(" "),_("blockquote",[_("p",[_("code",[e._v("React Fiber")]),e._v("改变了之前"),_("code",[e._v("react")]),e._v("的组件渲染机制，新的架构使原来同步渲染的组件现在可以异步化，可中途中断渲染，执行更高优先级的任务。释放浏览器主线程")])]),e._v(" "),_("p",[_("strong",[e._v("关键特性")])]),e._v(" "),_("ul",[_("li",[e._v("增量渲染（把渲染任务拆分成块，匀到多帧）")]),e._v(" "),_("li",[e._v("更新时能够暂停，终止，复用渲染任务")]),e._v(" "),_("li",[e._v("给不同类型的更新赋予优先级")]),e._v(" "),_("li",[e._v("并发方面新的基础能力")])]),e._v(" "),_("blockquote",[_("p",[e._v("增量渲染用来解决掉帧的问题，渲染任务拆分之后，每次只做一小段，做完一段就把时间控制权交还给主线程，而不像之前长时间占用")])]),e._v(" "),_("h2",{attrs:{id:"二、组件的渲染顺序"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#二、组件的渲染顺序"}},[e._v("#")]),e._v(" 二、组件的渲染顺序")]),e._v(" "),_("blockquote",[_("p",[e._v("假如有A,B,C,D组件，层级结构为：")])]),e._v(" "),_("p",[_("img",{attrs:{src:"https://poetries1.gitee.io/img-repo/2019/10/414.png",alt:""}})]),e._v(" "),_("p",[e._v("我们知道组件的生命周期为：")]),e._v(" "),_("p",[_("strong",[e._v("挂载阶段")]),e._v("：")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("constructor()")])]),e._v(" "),_("li",[_("code",[e._v("componentWillMount()")])]),e._v(" "),_("li",[_("code",[e._v("render()")])]),e._v(" "),_("li",[_("code",[e._v("componentDidMount()")])])]),e._v(" "),_("p",[_("strong",[e._v("更新阶段为")]),e._v("：")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("componentWillReceiveProps()")])]),e._v(" "),_("li",[_("code",[e._v("shouldComponentUpdate()")])]),e._v(" "),_("li",[_("code",[e._v("componentWillUpdate()")])]),e._v(" "),_("li",[_("code",[e._v("render()")])]),e._v(" "),_("li",[_("code",[e._v("componentDidUpdate")])])]),e._v(" "),_("blockquote",[_("p",[e._v("那么在挂载阶段，"),_("code",[e._v("A,B,C,D")]),e._v("的生命周期渲染顺序是如何的呢？")])]),e._v(" "),_("p",[e._v("那么在挂载阶段，A,B,C,D的生命周期渲染顺序是如何的呢？")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://poetries1.gitee.io/img-repo/2019/10/415.png",alt:""}})]),e._v(" "),_("blockquote",[_("p",[e._v("以"),_("code",[e._v("render()")]),e._v("函数为分界线。从顶层组件开始，一直往下，直至最底层子组件。然后再往上")])]),e._v(" "),_("p",[e._v("组件"),_("code",[e._v("update")]),e._v("阶段同理")]),e._v(" "),_("p",[e._v("前面是"),_("code",[e._v("react16")]),e._v("以前的组建渲染方式。这就存在一个问题")]),e._v(" "),_("blockquote",[_("p",[e._v("如果这是一个很大，层级很深的组件，"),_("code",[e._v("react")]),e._v("渲染它需要几十甚至几百毫秒，在这期间，"),_("code",[e._v("react")]),e._v("会一直占用浏览器主线程，任何其他的操作（包括用户的点击，鼠标移动等操作）都无法执行")])]),e._v(" "),_("p",[_("strong",[e._v("Fiber架构就是为了解决这个问题")])]),e._v(" "),_("blockquote",[_("p",[e._v("看一下fiber架构 组建的渲染顺序")])]),e._v(" "),_("p",[_("img",{attrs:{src:"https://poetries1.gitee.io/img-repo/2019/10/416.png",alt:""}})]),e._v(" "),_("blockquote",[_("p",[e._v("加入"),_("code",[e._v("fiber")]),e._v("的"),_("code",[e._v("react")]),e._v("将组件更新分为两个时期")])]),e._v(" "),_("p",[_("strong",[e._v("这两个时期以render为分界")])]),e._v(" "),_("ul",[_("li",[_("code",[e._v("render")]),e._v("前的生命周期为"),_("code",[e._v("phase1")]),e._v(",")]),e._v(" "),_("li",[_("code",[e._v("render")]),e._v("后的生命周期为"),_("code",[e._v("phase2")])])]),e._v(" "),_("blockquote",[_("ul",[_("li",[_("code",[e._v("phase1")]),e._v("的生命周期是可以被打断的，每隔一段时间它会跳出当前渲染进程，去确定是否有其他更重要的任务。此过程，"),_("code",[e._v("React")]),e._v("在 "),_("code",[e._v("workingProgressTree")]),e._v(" （并不是真实的"),_("code",[e._v("virtualDomTree")]),e._v("）上复用 "),_("code",[e._v("current")]),e._v(" 上的 "),_("code",[e._v("Fiber")]),e._v(" 数据结构来一步地（通过"),_("code",[e._v("requestIdleCallback")]),e._v("）来构建新的 tree，标记处需要更新的节点，放入队列中")]),e._v(" "),_("li",[_("code",[e._v("phase2")]),e._v("的生命周期是不可被打断的，"),_("code",[e._v("React")]),e._v(" 将其所有的变更一次性更新到"),_("code",[e._v("DOM")]),e._v("上")])])]),e._v(" "),_("p",[_("strong",[e._v("这里最重要的是phase1这是时期所做的事。因此我们需要具体了解phase1的机制")])]),e._v(" "),_("ul",[_("li",[e._v("如果不被打断，那么"),_("code",[e._v("phase1")]),e._v("执行完会直接进入"),_("code",[e._v("render")]),e._v("函数，构建真实的"),_("code",[e._v("virtualDomTree")])]),e._v(" "),_("li",[e._v("如果组件再"),_("code",[e._v("phase1")]),e._v("过程中被打断，即当前组件只渲染到一半（也许是在"),_("code",[e._v("willMount")]),e._v(",也许是"),_("code",[e._v("willUpdate")]),e._v("~反正是在render之前的生命周期），那么"),_("code",[e._v("react")]),e._v("会怎么干呢？ "),_("code",[e._v("react")]),e._v("会放弃当前组件所有干到一半的事情，去做更高优先级更重要的任务（当然，也可能是用户鼠标移动，或者其他react监听之外的任务），当所有高优先级任务执行完之后，"),_("code",[e._v("react")]),e._v("通过"),_("code",[e._v("callback")]),e._v("回到之前渲染到一半的组件，从头开始渲染。（看起来放弃已经渲染完的生命周期，会有点不合理，反而会增加渲染时长，但是"),_("code",[e._v("react")]),e._v("确实是这么干的）")])]),e._v(" "),_("p",[_("strong",[e._v("所有phase1的生命周期函数都可能被执行多次，因为可能会被打断重来")])]),e._v(" "),_("blockquote",[_("p",[e._v("这样的话，就和"),_("code",[e._v("react16")]),e._v("版本之前有很大区别了，因为可能会被执行多次，那么我们最好就得保证"),_("code",[e._v("phase1")]),e._v("的生命周期每一次执行的结果都是一样的，否则就会有问题，因此，最好都是纯函数")])]),e._v(" "),_("ul",[_("li",[e._v("如果高优先级的任务一直存在，那么低优先级的任务则永远无法进行，组件永远无法继续渲染。这个问题facebook目前好像还没解决")]),e._v(" "),_("li",[e._v("所以，facebook在"),_("code",[e._v("react16")]),e._v("增加"),_("code",[e._v("fiber")]),e._v("结构，其实并不是为了减少组件的渲染时间，事实上也并不会减少，最重要的是现在可以使得一些更高优先级的任务，如用户的操作能够优先执行，提高用户的体验，至少用户不会感觉到卡顿")])]),e._v(" "),_("h2",{attrs:{id:"三、参考"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#三、参考"}},[e._v("#")]),e._v(" 三、参考")]),e._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/26027085",target:"_blank",rel:"noopener noreferrer"}},[e._v("程墨Morgan知乎React Fiber是什么"),_("OutboundLink")],1)])])])}),[],!1,null,null,null);v.default=t.exports}}]);